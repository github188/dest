// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dssevent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dssevent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Dss {
namespace Event {

namespace {

const ::google::protobuf::Descriptor* DssCltCreatClientReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltCreatClientReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltCreatClientAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltCreatClientAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltPing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltPing_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssPong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssPong_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltCreatClientNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltCreatClientNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssDestroyClientCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssDestroyClientCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssSyncApplyLanPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssSyncApplyLanPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSyncApplyLanPortReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSyncApplyLanPortReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssSyncApplyConsLanPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssSyncApplyConsLanPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSyncApplyConsLanPortReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSyncApplyConsLanPortReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssASyncApplyConsLanPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssASyncApplyConsLanPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltASyncApplyConsLanPortReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltASyncApplyConsLanPortReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssSyncApplyWanPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssSyncApplyWanPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSyncApplyWanPortReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSyncApplyWanPortReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssASyncApplyLanPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssASyncApplyLanPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltASyncApplyLanPortReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltASyncApplyLanPortReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssASyncApplyWanPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssASyncApplyWanPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltASyncApplyWanPortReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltASyncApplyWanPortReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssReleasePortCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssReleasePortCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAddBridgeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAddBridgeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddBridgeAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddBridgeAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddBridgeNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddBridgeNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssRemoveBridgeCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssRemoveBridgeCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssSendToBridgeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssSendToBridgeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSendToBridgeAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSendToBridgeAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSendToBridgeNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSendToBridgeNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssStopSendToBridgeCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssStopSendToBridgeCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssReceiveFromBridgeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssReceiveFromBridgeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltReceiveFromBridgeAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltReceiveFromBridgeAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltReceiveFromBridgeNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltReceiveFromBridgeNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssStopReceiveFromBridgeCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssStopReceiveFromBridgeCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAddSwitchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAddSwitchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddSwitchAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddSwitchAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddSwitchNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddSwitchNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAddM2OneSwitchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAddM2OneSwitchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddM2OneSwitchAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddM2OneSwitchAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddM2OneSwitchNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddM2OneSwitchNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAddSrcSwitchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAddSrcSwitchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddSrcSwitchAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddSrcSwitchAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddSrcSwitchNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddSrcSwitchNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssRemoveSwitchCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssRemoveSwitchCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAddDumpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAddDumpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddDumpAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddDumpAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAddDumpNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAddDumpNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssRemoveDumpCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssRemoveDumpCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSrvLostNtf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSrvLostNtf_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltSrvRegisterNtf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltSrvRegisterNtf_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAliveDetectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAliveDetectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAliveDetectRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAliveDetectRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAttachLanIpOfPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAttachLanIpOfPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAttachLanIpOfPortAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAttachLanIpOfPortAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAttachLanIpOfPortNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAttachLanIpOfPortNack_reflection_ = NULL;
const ::google::protobuf::Descriptor* CltDssAttachWanIpOfPortReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CltDssAttachWanIpOfPortReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAttachWanIpOfPortAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAttachWanIpOfPortAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* DssCltAttachWanIpOfPortNack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DssCltAttachWanIpOfPortNack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dssevent_2eproto() {
  protobuf_AddDesc_dssevent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dssevent.proto");
  GOOGLE_CHECK(file != NULL);
  DssCltCreatClientReq_descriptor_ = file->message_type(0);
  static const int DssCltCreatClientReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientReq, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientReq, qname_),
  };
  DssCltCreatClientReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltCreatClientReq_descriptor_,
      DssCltCreatClientReq::default_instance_,
      DssCltCreatClientReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltCreatClientReq));
  DssCltCreatClientAck_descriptor_ = file->message_type(1);
  static const int DssCltCreatClientAck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientAck, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientAck, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientAck, keepalivetime_),
  };
  DssCltCreatClientAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltCreatClientAck_descriptor_,
      DssCltCreatClientAck::default_instance_,
      DssCltCreatClientAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltCreatClientAck));
  DssCltPing_descriptor_ = file->message_type(2);
  static const int DssCltPing_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltPing, clientid_),
  };
  DssCltPing_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltPing_descriptor_,
      DssCltPing::default_instance_,
      DssCltPing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltPing, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltPing, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltPing));
  CltDssPong_descriptor_ = file->message_type(3);
  static const int CltDssPong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssPong, clientid_),
  };
  CltDssPong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssPong_descriptor_,
      CltDssPong::default_instance_,
      CltDssPong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssPong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssPong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssPong));
  DssCltCreatClientNack_descriptor_ = file->message_type(4);
  static const int DssCltCreatClientNack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientNack, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientNack, type_),
  };
  DssCltCreatClientNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltCreatClientNack_descriptor_,
      DssCltCreatClientNack::default_instance_,
      DssCltCreatClientNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltCreatClientNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltCreatClientNack));
  CltDssDestroyClientCmd_descriptor_ = file->message_type(5);
  static const int CltDssDestroyClientCmd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssDestroyClientCmd, clientid_),
  };
  CltDssDestroyClientCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssDestroyClientCmd_descriptor_,
      CltDssDestroyClientCmd::default_instance_,
      CltDssDestroyClientCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssDestroyClientCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssDestroyClientCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssDestroyClientCmd));
  CltDssSyncApplyLanPortReq_descriptor_ = file->message_type(6);
  static const int CltDssSyncApplyLanPortReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyLanPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyLanPortReq, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyLanPortReq, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyLanPortReq, portdesc_),
  };
  CltDssSyncApplyLanPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssSyncApplyLanPortReq_descriptor_,
      CltDssSyncApplyLanPortReq::default_instance_,
      CltDssSyncApplyLanPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyLanPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyLanPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssSyncApplyLanPortReq));
  DssCltSyncApplyLanPortReply_descriptor_ = file->message_type(7);
  static const int DssCltSyncApplyLanPortReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyLanPortReply, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyLanPortReply, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyLanPortReply, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyLanPortReply, reply_),
  };
  DssCltSyncApplyLanPortReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSyncApplyLanPortReply_descriptor_,
      DssCltSyncApplyLanPortReply::default_instance_,
      DssCltSyncApplyLanPortReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyLanPortReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyLanPortReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSyncApplyLanPortReply));
  CltDssSyncApplyConsLanPortReq_descriptor_ = file->message_type(8);
  static const int CltDssSyncApplyConsLanPortReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, portdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, forceip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, adaptive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, consportnum_),
  };
  CltDssSyncApplyConsLanPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssSyncApplyConsLanPortReq_descriptor_,
      CltDssSyncApplyConsLanPortReq::default_instance_,
      CltDssSyncApplyConsLanPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyConsLanPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssSyncApplyConsLanPortReq));
  DssCltSyncApplyConsLanPortReply_descriptor_ = file->message_type(9);
  static const int DssCltSyncApplyConsLanPortReply_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, reply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, forceip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, adaptive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, consportnum_),
  };
  DssCltSyncApplyConsLanPortReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSyncApplyConsLanPortReply_descriptor_,
      DssCltSyncApplyConsLanPortReply::default_instance_,
      DssCltSyncApplyConsLanPortReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyConsLanPortReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSyncApplyConsLanPortReply));
  CltDssASyncApplyConsLanPortReq_descriptor_ = file->message_type(10);
  static const int CltDssASyncApplyConsLanPortReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, portdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, forceip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, adaptive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, consportnum_),
  };
  CltDssASyncApplyConsLanPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssASyncApplyConsLanPortReq_descriptor_,
      CltDssASyncApplyConsLanPortReq::default_instance_,
      CltDssASyncApplyConsLanPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyConsLanPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssASyncApplyConsLanPortReq));
  DssCltASyncApplyConsLanPortReply_descriptor_ = file->message_type(11);
  static const int DssCltASyncApplyConsLanPortReply_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, reply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, forceip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, adaptive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, consportnum_),
  };
  DssCltASyncApplyConsLanPortReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltASyncApplyConsLanPortReply_descriptor_,
      DssCltASyncApplyConsLanPortReply::default_instance_,
      DssCltASyncApplyConsLanPortReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyConsLanPortReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltASyncApplyConsLanPortReply));
  CltDssSyncApplyWanPortReq_descriptor_ = file->message_type(12);
  static const int CltDssSyncApplyWanPortReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyWanPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyWanPortReq, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyWanPortReq, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyWanPortReq, portdesc_),
  };
  CltDssSyncApplyWanPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssSyncApplyWanPortReq_descriptor_,
      CltDssSyncApplyWanPortReq::default_instance_,
      CltDssSyncApplyWanPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyWanPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSyncApplyWanPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssSyncApplyWanPortReq));
  DssCltSyncApplyWanPortReply_descriptor_ = file->message_type(13);
  static const int DssCltSyncApplyWanPortReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyWanPortReply, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyWanPortReply, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyWanPortReply, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyWanPortReply, reply_),
  };
  DssCltSyncApplyWanPortReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSyncApplyWanPortReply_descriptor_,
      DssCltSyncApplyWanPortReply::default_instance_,
      DssCltSyncApplyWanPortReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyWanPortReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSyncApplyWanPortReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSyncApplyWanPortReply));
  CltDssASyncApplyLanPortReq_descriptor_ = file->message_type(14);
  static const int CltDssASyncApplyLanPortReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyLanPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyLanPortReq, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyLanPortReq, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyLanPortReq, portdesc_),
  };
  CltDssASyncApplyLanPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssASyncApplyLanPortReq_descriptor_,
      CltDssASyncApplyLanPortReq::default_instance_,
      CltDssASyncApplyLanPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyLanPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyLanPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssASyncApplyLanPortReq));
  DssCltASyncApplyLanPortReply_descriptor_ = file->message_type(15);
  static const int DssCltASyncApplyLanPortReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyLanPortReply, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyLanPortReply, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyLanPortReply, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyLanPortReply, reply_),
  };
  DssCltASyncApplyLanPortReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltASyncApplyLanPortReply_descriptor_,
      DssCltASyncApplyLanPortReply::default_instance_,
      DssCltASyncApplyLanPortReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyLanPortReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyLanPortReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltASyncApplyLanPortReply));
  CltDssASyncApplyWanPortReq_descriptor_ = file->message_type(16);
  static const int CltDssASyncApplyWanPortReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyWanPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyWanPortReq, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyWanPortReq, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyWanPortReq, portdesc_),
  };
  CltDssASyncApplyWanPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssASyncApplyWanPortReq_descriptor_,
      CltDssASyncApplyWanPortReq::default_instance_,
      CltDssASyncApplyWanPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyWanPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssASyncApplyWanPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssASyncApplyWanPortReq));
  DssCltASyncApplyWanPortReply_descriptor_ = file->message_type(17);
  static const int DssCltASyncApplyWanPortReply_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyWanPortReply, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyWanPortReply, meetinghandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyWanPortReply, bandwidth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyWanPortReply, reply_),
  };
  DssCltASyncApplyWanPortReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltASyncApplyWanPortReply_descriptor_,
      DssCltASyncApplyWanPortReply::default_instance_,
      DssCltASyncApplyWanPortReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyWanPortReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltASyncApplyWanPortReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltASyncApplyWanPortReply));
  CltDssReleasePortCmd_descriptor_ = file->message_type(18);
  static const int CltDssReleasePortCmd_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReleasePortCmd, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReleasePortCmd, address_),
  };
  CltDssReleasePortCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssReleasePortCmd_descriptor_,
      CltDssReleasePortCmd::default_instance_,
      CltDssReleasePortCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReleasePortCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReleasePortCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssReleasePortCmd));
  CltDssAddBridgeReq_descriptor_ = file->message_type(19);
  static const int CltDssAddBridgeReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddBridgeReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddBridgeReq, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddBridgeReq, startserverhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddBridgeReq, forceip_),
  };
  CltDssAddBridgeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAddBridgeReq_descriptor_,
      CltDssAddBridgeReq::default_instance_,
      CltDssAddBridgeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddBridgeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddBridgeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAddBridgeReq));
  DssCltAddBridgeAck_descriptor_ = file->message_type(20);
  static const int DssCltAddBridgeAck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeAck, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeAck, startserverhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeAck, bridgehandle_),
  };
  DssCltAddBridgeAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddBridgeAck_descriptor_,
      DssCltAddBridgeAck::default_instance_,
      DssCltAddBridgeAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddBridgeAck));
  DssCltAddBridgeNack_descriptor_ = file->message_type(21);
  static const int DssCltAddBridgeNack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeNack, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeNack, startserverhandle_),
  };
  DssCltAddBridgeNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddBridgeNack_descriptor_,
      DssCltAddBridgeNack::default_instance_,
      DssCltAddBridgeNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddBridgeNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddBridgeNack));
  CltDssRemoveBridgeCmd_descriptor_ = file->message_type(22);
  static const int CltDssRemoveBridgeCmd_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveBridgeCmd, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveBridgeCmd, bridgehandle_),
  };
  CltDssRemoveBridgeCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssRemoveBridgeCmd_descriptor_,
      CltDssRemoveBridgeCmd::default_instance_,
      CltDssRemoveBridgeCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveBridgeCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveBridgeCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssRemoveBridgeCmd));
  CltDssSendToBridgeReq_descriptor_ = file->message_type(23);
  static const int CltDssSendToBridgeReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSendToBridgeReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSendToBridgeReq, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSendToBridgeReq, rcvaddr_),
  };
  CltDssSendToBridgeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssSendToBridgeReq_descriptor_,
      CltDssSendToBridgeReq::default_instance_,
      CltDssSendToBridgeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSendToBridgeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssSendToBridgeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssSendToBridgeReq));
  DssCltSendToBridgeAck_descriptor_ = file->message_type(24);
  static const int DssCltSendToBridgeAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeAck, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeAck, rcvaddr_),
  };
  DssCltSendToBridgeAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSendToBridgeAck_descriptor_,
      DssCltSendToBridgeAck::default_instance_,
      DssCltSendToBridgeAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSendToBridgeAck));
  DssCltSendToBridgeNack_descriptor_ = file->message_type(25);
  static const int DssCltSendToBridgeNack_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeNack, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeNack, rcvaddr_),
  };
  DssCltSendToBridgeNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSendToBridgeNack_descriptor_,
      DssCltSendToBridgeNack::default_instance_,
      DssCltSendToBridgeNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSendToBridgeNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSendToBridgeNack));
  CltDssStopSendToBridgeCmd_descriptor_ = file->message_type(26);
  static const int CltDssStopSendToBridgeCmd_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopSendToBridgeCmd, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopSendToBridgeCmd, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopSendToBridgeCmd, rcvaddr_),
  };
  CltDssStopSendToBridgeCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssStopSendToBridgeCmd_descriptor_,
      CltDssStopSendToBridgeCmd::default_instance_,
      CltDssStopSendToBridgeCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopSendToBridgeCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopSendToBridgeCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssStopSendToBridgeCmd));
  CltDssReceiveFromBridgeReq_descriptor_ = file->message_type(27);
  static const int CltDssReceiveFromBridgeReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReceiveFromBridgeReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReceiveFromBridgeReq, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReceiveFromBridgeReq, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReceiveFromBridgeReq, dstaddr_),
  };
  CltDssReceiveFromBridgeReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssReceiveFromBridgeReq_descriptor_,
      CltDssReceiveFromBridgeReq::default_instance_,
      CltDssReceiveFromBridgeReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReceiveFromBridgeReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssReceiveFromBridgeReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssReceiveFromBridgeReq));
  DssCltReceiveFromBridgeAck_descriptor_ = file->message_type(28);
  static const int DssCltReceiveFromBridgeAck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeAck, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeAck, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeAck, dstaddr_),
  };
  DssCltReceiveFromBridgeAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltReceiveFromBridgeAck_descriptor_,
      DssCltReceiveFromBridgeAck::default_instance_,
      DssCltReceiveFromBridgeAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltReceiveFromBridgeAck));
  DssCltReceiveFromBridgeNack_descriptor_ = file->message_type(29);
  static const int DssCltReceiveFromBridgeNack_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeNack, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeNack, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeNack, dstaddr_),
  };
  DssCltReceiveFromBridgeNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltReceiveFromBridgeNack_descriptor_,
      DssCltReceiveFromBridgeNack::default_instance_,
      DssCltReceiveFromBridgeNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltReceiveFromBridgeNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltReceiveFromBridgeNack));
  CltDssStopReceiveFromBridgeCmd_descriptor_ = file->message_type(30);
  static const int CltDssStopReceiveFromBridgeCmd_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, bridgehandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, mapaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, dstaddr_),
  };
  CltDssStopReceiveFromBridgeCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssStopReceiveFromBridgeCmd_descriptor_,
      CltDssStopReceiveFromBridgeCmd::default_instance_,
      CltDssStopReceiveFromBridgeCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssStopReceiveFromBridgeCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssStopReceiveFromBridgeCmd));
  CltDssAddSwitchReq_descriptor_ = file->message_type(31);
  static const int CltDssAddSwitchReq_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, mapaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, deckey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, enckey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, uniform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, dstype_),
  };
  CltDssAddSwitchReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAddSwitchReq_descriptor_,
      CltDssAddSwitchReq::default_instance_,
      CltDssAddSwitchReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSwitchReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAddSwitchReq));
  DssCltAddSwitchAck_descriptor_ = file->message_type(32);
  static const int DssCltAddSwitchAck_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, dstype_),
  };
  DssCltAddSwitchAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddSwitchAck_descriptor_,
      DssCltAddSwitchAck::default_instance_,
      DssCltAddSwitchAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddSwitchAck));
  DssCltAddSwitchNack_descriptor_ = file->message_type(33);
  static const int DssCltAddSwitchNack_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, dstype_),
  };
  DssCltAddSwitchNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddSwitchNack_descriptor_,
      DssCltAddSwitchNack::default_instance_,
      DssCltAddSwitchNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSwitchNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddSwitchNack));
  CltDssAddM2OneSwitchReq_descriptor_ = file->message_type(34);
  static const int CltDssAddM2OneSwitchReq_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, mapaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, deckey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, enckey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, uniform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, dstype_),
  };
  CltDssAddM2OneSwitchReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAddM2OneSwitchReq_descriptor_,
      CltDssAddM2OneSwitchReq::default_instance_,
      CltDssAddM2OneSwitchReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddM2OneSwitchReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAddM2OneSwitchReq));
  DssCltAddM2OneSwitchAck_descriptor_ = file->message_type(35);
  static const int DssCltAddM2OneSwitchAck_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, dstype_),
  };
  DssCltAddM2OneSwitchAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddM2OneSwitchAck_descriptor_,
      DssCltAddM2OneSwitchAck::default_instance_,
      DssCltAddM2OneSwitchAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddM2OneSwitchAck));
  DssCltAddM2OneSwitchNack_descriptor_ = file->message_type(36);
  static const int DssCltAddM2OneSwitchNack_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, dstype_),
  };
  DssCltAddM2OneSwitchNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddM2OneSwitchNack_descriptor_,
      DssCltAddM2OneSwitchNack::default_instance_,
      DssCltAddM2OneSwitchNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddM2OneSwitchNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddM2OneSwitchNack));
  CltDssAddSrcSwitchReq_descriptor_ = file->message_type(37);
  static const int CltDssAddSrcSwitchReq_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, srcepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, srcaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, mapaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, deckey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, enckey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, uniform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, dstype_),
  };
  CltDssAddSrcSwitchReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAddSrcSwitchReq_descriptor_,
      CltDssAddSrcSwitchReq::default_instance_,
      CltDssAddSrcSwitchReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddSrcSwitchReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAddSrcSwitchReq));
  DssCltAddSrcSwitchAck_descriptor_ = file->message_type(38);
  static const int DssCltAddSrcSwitchAck_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, srcepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, srcaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, dstype_),
  };
  DssCltAddSrcSwitchAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddSrcSwitchAck_descriptor_,
      DssCltAddSrcSwitchAck::default_instance_,
      DssCltAddSrcSwitchAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddSrcSwitchAck));
  DssCltAddSrcSwitchNack_descriptor_ = file->message_type(39);
  static const int DssCltAddSrcSwitchNack_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, srcepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, srcaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, dstype_),
  };
  DssCltAddSrcSwitchNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddSrcSwitchNack_descriptor_,
      DssCltAddSrcSwitchNack::default_instance_,
      DssCltAddSrcSwitchNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddSrcSwitchNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddSrcSwitchNack));
  CltDssRemoveSwitchCmd_descriptor_ = file->message_type(40);
  static const int CltDssRemoveSwitchCmd_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, srcepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, srcaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, dstepid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, dstaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, rcvaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, mapaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, dstype_),
  };
  CltDssRemoveSwitchCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssRemoveSwitchCmd_descriptor_,
      CltDssRemoveSwitchCmd::default_instance_,
      CltDssRemoveSwitchCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveSwitchCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssRemoveSwitchCmd));
  CltDssAddDumpReq_descriptor_ = file->message_type(41);
  static const int CltDssAddDumpReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddDumpReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddDumpReq, rcvaddr_),
  };
  CltDssAddDumpReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAddDumpReq_descriptor_,
      CltDssAddDumpReq::default_instance_,
      CltDssAddDumpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddDumpReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAddDumpReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAddDumpReq));
  DssCltAddDumpAck_descriptor_ = file->message_type(42);
  static const int DssCltAddDumpAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpAck, rcvaddr_),
  };
  DssCltAddDumpAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddDumpAck_descriptor_,
      DssCltAddDumpAck::default_instance_,
      DssCltAddDumpAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddDumpAck));
  DssCltAddDumpNack_descriptor_ = file->message_type(43);
  static const int DssCltAddDumpNack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpNack, rcvaddr_),
  };
  DssCltAddDumpNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAddDumpNack_descriptor_,
      DssCltAddDumpNack::default_instance_,
      DssCltAddDumpNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAddDumpNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAddDumpNack));
  CltDssRemoveDumpCmd_descriptor_ = file->message_type(44);
  static const int CltDssRemoveDumpCmd_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveDumpCmd, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveDumpCmd, rcvaddr_),
  };
  CltDssRemoveDumpCmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssRemoveDumpCmd_descriptor_,
      CltDssRemoveDumpCmd::default_instance_,
      CltDssRemoveDumpCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveDumpCmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssRemoveDumpCmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssRemoveDumpCmd));
  DssCltSrvLostNtf_descriptor_ = file->message_type(45);
  static const int DssCltSrvLostNtf_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvLostNtf, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvLostNtf, srvhandle_),
  };
  DssCltSrvLostNtf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSrvLostNtf_descriptor_,
      DssCltSrvLostNtf::default_instance_,
      DssCltSrvLostNtf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvLostNtf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvLostNtf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSrvLostNtf));
  DssCltSrvRegisterNtf_descriptor_ = file->message_type(46);
  static const int DssCltSrvRegisterNtf_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvRegisterNtf, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvRegisterNtf, srvhandle_),
  };
  DssCltSrvRegisterNtf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltSrvRegisterNtf_descriptor_,
      DssCltSrvRegisterNtf::default_instance_,
      DssCltSrvRegisterNtf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvRegisterNtf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltSrvRegisterNtf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltSrvRegisterNtf));
  CltDssAliveDetectReq_descriptor_ = file->message_type(47);
  static const int CltDssAliveDetectReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAliveDetectReq, reserved_),
  };
  CltDssAliveDetectReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAliveDetectReq_descriptor_,
      CltDssAliveDetectReq::default_instance_,
      CltDssAliveDetectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAliveDetectReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAliveDetectReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAliveDetectReq));
  DssCltAliveDetectRsp_descriptor_ = file->message_type(48);
  static const int DssCltAliveDetectRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAliveDetectRsp, reserved_),
  };
  DssCltAliveDetectRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAliveDetectRsp_descriptor_,
      DssCltAliveDetectRsp::default_instance_,
      DssCltAliveDetectRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAliveDetectRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAliveDetectRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAliveDetectRsp));
  CltDssAttachLanIpOfPortReq_descriptor_ = file->message_type(49);
  static const int CltDssAttachLanIpOfPortReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachLanIpOfPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachLanIpOfPortReq, srvhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachLanIpOfPortReq, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachLanIpOfPortReq, subnet_),
  };
  CltDssAttachLanIpOfPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAttachLanIpOfPortReq_descriptor_,
      CltDssAttachLanIpOfPortReq::default_instance_,
      CltDssAttachLanIpOfPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachLanIpOfPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachLanIpOfPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAttachLanIpOfPortReq));
  DssCltAttachLanIpOfPortAck_descriptor_ = file->message_type(50);
  static const int DssCltAttachLanIpOfPortAck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortAck, srvhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortAck, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortAck, ipaddr_),
  };
  DssCltAttachLanIpOfPortAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAttachLanIpOfPortAck_descriptor_,
      DssCltAttachLanIpOfPortAck::default_instance_,
      DssCltAttachLanIpOfPortAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAttachLanIpOfPortAck));
  DssCltAttachLanIpOfPortNack_descriptor_ = file->message_type(51);
  static const int DssCltAttachLanIpOfPortNack_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortNack, srvhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortNack, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortNack, subnet_),
  };
  DssCltAttachLanIpOfPortNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAttachLanIpOfPortNack_descriptor_,
      DssCltAttachLanIpOfPortNack::default_instance_,
      DssCltAttachLanIpOfPortNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachLanIpOfPortNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAttachLanIpOfPortNack));
  CltDssAttachWanIpOfPortReq_descriptor_ = file->message_type(52);
  static const int CltDssAttachWanIpOfPortReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachWanIpOfPortReq, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachWanIpOfPortReq, srvhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachWanIpOfPortReq, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachWanIpOfPortReq, carriertype_),
  };
  CltDssAttachWanIpOfPortReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CltDssAttachWanIpOfPortReq_descriptor_,
      CltDssAttachWanIpOfPortReq::default_instance_,
      CltDssAttachWanIpOfPortReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachWanIpOfPortReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CltDssAttachWanIpOfPortReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CltDssAttachWanIpOfPortReq));
  DssCltAttachWanIpOfPortAck_descriptor_ = file->message_type(53);
  static const int DssCltAttachWanIpOfPortAck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortAck, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortAck, srvhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortAck, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortAck, ipaddr_),
  };
  DssCltAttachWanIpOfPortAck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAttachWanIpOfPortAck_descriptor_,
      DssCltAttachWanIpOfPortAck::default_instance_,
      DssCltAttachWanIpOfPortAck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortAck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortAck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAttachWanIpOfPortAck));
  DssCltAttachWanIpOfPortNack_descriptor_ = file->message_type(54);
  static const int DssCltAttachWanIpOfPortNack_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortNack, clientid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortNack, srvhandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortNack, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortNack, carriertype_),
  };
  DssCltAttachWanIpOfPortNack_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DssCltAttachWanIpOfPortNack_descriptor_,
      DssCltAttachWanIpOfPortNack::default_instance_,
      DssCltAttachWanIpOfPortNack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortNack, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DssCltAttachWanIpOfPortNack, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DssCltAttachWanIpOfPortNack));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dssevent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltCreatClientReq_descriptor_, &DssCltCreatClientReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltCreatClientAck_descriptor_, &DssCltCreatClientAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltPing_descriptor_, &DssCltPing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssPong_descriptor_, &CltDssPong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltCreatClientNack_descriptor_, &DssCltCreatClientNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssDestroyClientCmd_descriptor_, &CltDssDestroyClientCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssSyncApplyLanPortReq_descriptor_, &CltDssSyncApplyLanPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSyncApplyLanPortReply_descriptor_, &DssCltSyncApplyLanPortReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssSyncApplyConsLanPortReq_descriptor_, &CltDssSyncApplyConsLanPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSyncApplyConsLanPortReply_descriptor_, &DssCltSyncApplyConsLanPortReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssASyncApplyConsLanPortReq_descriptor_, &CltDssASyncApplyConsLanPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltASyncApplyConsLanPortReply_descriptor_, &DssCltASyncApplyConsLanPortReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssSyncApplyWanPortReq_descriptor_, &CltDssSyncApplyWanPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSyncApplyWanPortReply_descriptor_, &DssCltSyncApplyWanPortReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssASyncApplyLanPortReq_descriptor_, &CltDssASyncApplyLanPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltASyncApplyLanPortReply_descriptor_, &DssCltASyncApplyLanPortReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssASyncApplyWanPortReq_descriptor_, &CltDssASyncApplyWanPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltASyncApplyWanPortReply_descriptor_, &DssCltASyncApplyWanPortReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssReleasePortCmd_descriptor_, &CltDssReleasePortCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAddBridgeReq_descriptor_, &CltDssAddBridgeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddBridgeAck_descriptor_, &DssCltAddBridgeAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddBridgeNack_descriptor_, &DssCltAddBridgeNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssRemoveBridgeCmd_descriptor_, &CltDssRemoveBridgeCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssSendToBridgeReq_descriptor_, &CltDssSendToBridgeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSendToBridgeAck_descriptor_, &DssCltSendToBridgeAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSendToBridgeNack_descriptor_, &DssCltSendToBridgeNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssStopSendToBridgeCmd_descriptor_, &CltDssStopSendToBridgeCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssReceiveFromBridgeReq_descriptor_, &CltDssReceiveFromBridgeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltReceiveFromBridgeAck_descriptor_, &DssCltReceiveFromBridgeAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltReceiveFromBridgeNack_descriptor_, &DssCltReceiveFromBridgeNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssStopReceiveFromBridgeCmd_descriptor_, &CltDssStopReceiveFromBridgeCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAddSwitchReq_descriptor_, &CltDssAddSwitchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddSwitchAck_descriptor_, &DssCltAddSwitchAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddSwitchNack_descriptor_, &DssCltAddSwitchNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAddM2OneSwitchReq_descriptor_, &CltDssAddM2OneSwitchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddM2OneSwitchAck_descriptor_, &DssCltAddM2OneSwitchAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddM2OneSwitchNack_descriptor_, &DssCltAddM2OneSwitchNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAddSrcSwitchReq_descriptor_, &CltDssAddSrcSwitchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddSrcSwitchAck_descriptor_, &DssCltAddSrcSwitchAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddSrcSwitchNack_descriptor_, &DssCltAddSrcSwitchNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssRemoveSwitchCmd_descriptor_, &CltDssRemoveSwitchCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAddDumpReq_descriptor_, &CltDssAddDumpReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddDumpAck_descriptor_, &DssCltAddDumpAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAddDumpNack_descriptor_, &DssCltAddDumpNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssRemoveDumpCmd_descriptor_, &CltDssRemoveDumpCmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSrvLostNtf_descriptor_, &DssCltSrvLostNtf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltSrvRegisterNtf_descriptor_, &DssCltSrvRegisterNtf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAliveDetectReq_descriptor_, &CltDssAliveDetectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAliveDetectRsp_descriptor_, &DssCltAliveDetectRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAttachLanIpOfPortReq_descriptor_, &CltDssAttachLanIpOfPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAttachLanIpOfPortAck_descriptor_, &DssCltAttachLanIpOfPortAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAttachLanIpOfPortNack_descriptor_, &DssCltAttachLanIpOfPortNack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CltDssAttachWanIpOfPortReq_descriptor_, &CltDssAttachWanIpOfPortReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAttachWanIpOfPortAck_descriptor_, &DssCltAttachWanIpOfPortAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DssCltAttachWanIpOfPortNack_descriptor_, &DssCltAttachWanIpOfPortNack::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dssevent_2eproto() {
  delete DssCltCreatClientReq::default_instance_;
  delete DssCltCreatClientReq_reflection_;
  delete DssCltCreatClientAck::default_instance_;
  delete DssCltCreatClientAck_reflection_;
  delete DssCltPing::default_instance_;
  delete DssCltPing_reflection_;
  delete CltDssPong::default_instance_;
  delete CltDssPong_reflection_;
  delete DssCltCreatClientNack::default_instance_;
  delete DssCltCreatClientNack_reflection_;
  delete CltDssDestroyClientCmd::default_instance_;
  delete CltDssDestroyClientCmd_reflection_;
  delete CltDssSyncApplyLanPortReq::default_instance_;
  delete CltDssSyncApplyLanPortReq_reflection_;
  delete DssCltSyncApplyLanPortReply::default_instance_;
  delete DssCltSyncApplyLanPortReply_reflection_;
  delete CltDssSyncApplyConsLanPortReq::default_instance_;
  delete CltDssSyncApplyConsLanPortReq_reflection_;
  delete DssCltSyncApplyConsLanPortReply::default_instance_;
  delete DssCltSyncApplyConsLanPortReply_reflection_;
  delete CltDssASyncApplyConsLanPortReq::default_instance_;
  delete CltDssASyncApplyConsLanPortReq_reflection_;
  delete DssCltASyncApplyConsLanPortReply::default_instance_;
  delete DssCltASyncApplyConsLanPortReply_reflection_;
  delete CltDssSyncApplyWanPortReq::default_instance_;
  delete CltDssSyncApplyWanPortReq_reflection_;
  delete DssCltSyncApplyWanPortReply::default_instance_;
  delete DssCltSyncApplyWanPortReply_reflection_;
  delete CltDssASyncApplyLanPortReq::default_instance_;
  delete CltDssASyncApplyLanPortReq_reflection_;
  delete DssCltASyncApplyLanPortReply::default_instance_;
  delete DssCltASyncApplyLanPortReply_reflection_;
  delete CltDssASyncApplyWanPortReq::default_instance_;
  delete CltDssASyncApplyWanPortReq_reflection_;
  delete DssCltASyncApplyWanPortReply::default_instance_;
  delete DssCltASyncApplyWanPortReply_reflection_;
  delete CltDssReleasePortCmd::default_instance_;
  delete CltDssReleasePortCmd_reflection_;
  delete CltDssAddBridgeReq::default_instance_;
  delete CltDssAddBridgeReq_reflection_;
  delete DssCltAddBridgeAck::default_instance_;
  delete DssCltAddBridgeAck_reflection_;
  delete DssCltAddBridgeNack::default_instance_;
  delete DssCltAddBridgeNack_reflection_;
  delete CltDssRemoveBridgeCmd::default_instance_;
  delete CltDssRemoveBridgeCmd_reflection_;
  delete CltDssSendToBridgeReq::default_instance_;
  delete CltDssSendToBridgeReq_reflection_;
  delete DssCltSendToBridgeAck::default_instance_;
  delete DssCltSendToBridgeAck_reflection_;
  delete DssCltSendToBridgeNack::default_instance_;
  delete DssCltSendToBridgeNack_reflection_;
  delete CltDssStopSendToBridgeCmd::default_instance_;
  delete CltDssStopSendToBridgeCmd_reflection_;
  delete CltDssReceiveFromBridgeReq::default_instance_;
  delete CltDssReceiveFromBridgeReq_reflection_;
  delete DssCltReceiveFromBridgeAck::default_instance_;
  delete DssCltReceiveFromBridgeAck_reflection_;
  delete DssCltReceiveFromBridgeNack::default_instance_;
  delete DssCltReceiveFromBridgeNack_reflection_;
  delete CltDssStopReceiveFromBridgeCmd::default_instance_;
  delete CltDssStopReceiveFromBridgeCmd_reflection_;
  delete CltDssAddSwitchReq::default_instance_;
  delete CltDssAddSwitchReq_reflection_;
  delete DssCltAddSwitchAck::default_instance_;
  delete DssCltAddSwitchAck_reflection_;
  delete DssCltAddSwitchNack::default_instance_;
  delete DssCltAddSwitchNack_reflection_;
  delete CltDssAddM2OneSwitchReq::default_instance_;
  delete CltDssAddM2OneSwitchReq_reflection_;
  delete DssCltAddM2OneSwitchAck::default_instance_;
  delete DssCltAddM2OneSwitchAck_reflection_;
  delete DssCltAddM2OneSwitchNack::default_instance_;
  delete DssCltAddM2OneSwitchNack_reflection_;
  delete CltDssAddSrcSwitchReq::default_instance_;
  delete CltDssAddSrcSwitchReq_reflection_;
  delete DssCltAddSrcSwitchAck::default_instance_;
  delete DssCltAddSrcSwitchAck_reflection_;
  delete DssCltAddSrcSwitchNack::default_instance_;
  delete DssCltAddSrcSwitchNack_reflection_;
  delete CltDssRemoveSwitchCmd::default_instance_;
  delete CltDssRemoveSwitchCmd_reflection_;
  delete CltDssAddDumpReq::default_instance_;
  delete CltDssAddDumpReq_reflection_;
  delete DssCltAddDumpAck::default_instance_;
  delete DssCltAddDumpAck_reflection_;
  delete DssCltAddDumpNack::default_instance_;
  delete DssCltAddDumpNack_reflection_;
  delete CltDssRemoveDumpCmd::default_instance_;
  delete CltDssRemoveDumpCmd_reflection_;
  delete DssCltSrvLostNtf::default_instance_;
  delete DssCltSrvLostNtf_reflection_;
  delete DssCltSrvRegisterNtf::default_instance_;
  delete DssCltSrvRegisterNtf_reflection_;
  delete CltDssAliveDetectReq::default_instance_;
  delete CltDssAliveDetectReq_reflection_;
  delete DssCltAliveDetectRsp::default_instance_;
  delete DssCltAliveDetectRsp_reflection_;
  delete CltDssAttachLanIpOfPortReq::default_instance_;
  delete CltDssAttachLanIpOfPortReq_reflection_;
  delete DssCltAttachLanIpOfPortAck::default_instance_;
  delete DssCltAttachLanIpOfPortAck_reflection_;
  delete DssCltAttachLanIpOfPortNack::default_instance_;
  delete DssCltAttachLanIpOfPortNack_reflection_;
  delete CltDssAttachWanIpOfPortReq::default_instance_;
  delete CltDssAttachWanIpOfPortReq_reflection_;
  delete DssCltAttachWanIpOfPortAck::default_instance_;
  delete DssCltAttachWanIpOfPortAck_reflection_;
  delete DssCltAttachWanIpOfPortNack::default_instance_;
  delete DssCltAttachWanIpOfPortNack_reflection_;
}

void protobuf_AddDesc_dssevent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Dss::Event::protobuf_AddDesc_dssevstruct_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016dssevent.proto\022\tDss.Event\032\021dssevstruct"
    ".proto\"U\n\024DssCltCreatClientReq\022\r\n\005Alias\030"
    "\001 \001(\t\022\037\n\004Type\030\002 \001(\0162\021.Dss.Event.DssObj\022\r"
    "\n\005QName\030\003 \001(\t\"o\n\024DssCltCreatClientAck\022\r\n"
    "\005Alias\030\001 \001(\t\022\037\n\004Type\030\002 \001(\0162\021.Dss.Event.D"
    "ssObj\022\020\n\010ClientId\030\003 \001(\r\022\025\n\rkeepalivetime"
    "\030\004 \001(\r\"\036\n\nDssCltPing\022\020\n\010ClientId\030\001 \001(\r\"\036"
    "\n\nCltDssPong\022\020\n\010ClientId\030\001 \001(\r\"G\n\025DssClt"
    "CreatClientNack\022\r\n\005Alias\030\001 \001(\t\022\037\n\004Type\030\002"
    " \001(\0162\021.Dss.Event.DssObj\"*\n\026CltDssDestroy"
    "ClientCmd\022\020\n\010ClientId\030\001 \001(\r\"\202\001\n\031CltDssSy"
    "ncApplyLanPortReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rM"
    "eetingHandle\030\002 \001(\t\022\021\n\tBandWidth\030\003 \001(\r\022)\n"
    "\010portdesc\030\004 \003(\0132\027.Dss.Event.ApplyLanPort"
    "\"\206\001\n\033DssCltSyncApplyLanPortReply\022\020\n\010Clie"
    "ntId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\021\n\tBan"
    "dWidth\030\003 \001(\r\022+\n\005reply\030\004 \003(\0132\034.Dss.Event."
    "ApplyLanPortReply\"\276\001\n\035CltDssSyncApplyCon"
    "sLanPortReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeeting"
    "Handle\030\002 \001(\t\022\021\n\tBandWidth\030\003 \001(\r\022)\n\010portd"
    "esc\030\004 \001(\0132\027.Dss.Event.ApplyLanPort\022\017\n\007Fo"
    "rceIp\030\005 \001(\010\022\020\n\010Adaptive\030\006 \001(\010\022\023\n\013ConsPor"
    "tNum\030\007 \001(\r\"\302\001\n\037DssCltSyncApplyConsLanPor"
    "tReply\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandl"
    "e\030\002 \001(\t\022\021\n\tBandWidth\030\003 \001(\r\022+\n\005reply\030\004 \001("
    "\0132\034.Dss.Event.ApplyLanPortReply\022\017\n\007Force"
    "Ip\030\005 \001(\010\022\020\n\010Adaptive\030\006 \001(\010\022\023\n\013ConsPortNu"
    "m\030\007 \001(\r\"\277\001\n\036CltDssASyncApplyConsLanPortR"
    "eq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 "
    "\001(\t\022\021\n\tBandWidth\030\003 \001(\r\022)\n\010portdesc\030\004 \001(\013"
    "2\027.Dss.Event.ApplyLanPort\022\017\n\007ForceIp\030\005 \001"
    "(\010\022\020\n\010Adaptive\030\006 \001(\010\022\023\n\013ConsPortNum\030\007 \001("
    "\r\"\303\001\n DssCltASyncApplyConsLanPortReply\022\020"
    "\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022"
    "\021\n\tBandWidth\030\003 \001(\r\022+\n\005reply\030\004 \001(\0132\034.Dss."
    "Event.ApplyLanPortReply\022\017\n\007ForceIp\030\005 \001(\010"
    "\022\020\n\010Adaptive\030\006 \001(\010\022\023\n\013ConsPortNum\030\007 \001(\r\""
    "\202\001\n\031CltDssSyncApplyWanPortReq\022\020\n\010ClientI"
    "d\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\021\n\tBandWi"
    "dth\030\003 \001(\r\022)\n\010portdesc\030\004 \003(\0132\027.Dss.Event."
    "ApplyWanPort\"\206\001\n\033DssCltSyncApplyWanPortR"
    "eply\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030"
    "\002 \001(\t\022\021\n\tBandWidth\030\003 \001(\r\022+\n\005reply\030\004 \003(\0132"
    "\034.Dss.Event.ApplyWanPortReply\"\203\001\n\032CltDss"
    "ASyncApplyLanPortReq\022\020\n\010ClientId\030\001 \001(\r\022\025"
    "\n\rMeetingHandle\030\002 \001(\t\022\021\n\tBandWidth\030\003 \001(\r"
    "\022)\n\010portdesc\030\004 \003(\0132\027.Dss.Event.ApplyLanP"
    "ort\"\207\001\n\034DssCltASyncApplyLanPortReply\022\020\n\010"
    "ClientId\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\021\n"
    "\tBandWidth\030\003 \001(\r\022+\n\005reply\030\004 \003(\0132\034.Dss.Ev"
    "ent.ApplyLanPortReply\"\203\001\n\032CltDssASyncApp"
    "lyWanPortReq\022\020\n\010ClientId\030\001 \001(\r\022\025\n\rMeetin"
    "gHandle\030\002 \001(\t\022\021\n\tBandWidth\030\003 \001(\r\022)\n\010port"
    "desc\030\004 \003(\0132\027.Dss.Event.ApplyWanPort\"\207\001\n\034"
    "DssCltASyncApplyWanPortReply\022\020\n\010ClientId"
    "\030\001 \001(\r\022\025\n\rMeetingHandle\030\002 \001(\t\022\021\n\tBandWid"
    "th\030\003 \001(\r\022+\n\005reply\030\004 \003(\0132\034.Dss.Event.Appl"
    "yWanPortReply\"P\n\024CltDssReleasePortCmd\022\020\n"
    "\010ClientId\030\001 \001(\r\022&\n\007Address\030\002 \001(\0132\025.Dss.E"
    "vent.DssNetAddr\"z\n\022CltDssAddBridgeReq\022\020\n"
    "\010ClientId\030\001 \001(\r\022&\n\007RcvAddr\030\002 \001(\0132\025.Dss.E"
    "vent.DssNetAddr\022\031\n\021StartServerHandle\030\003 \001"
    "(\r\022\017\n\007forceip\030\004 \001(\010\"\177\n\022DssCltAddBridgeAc"
    "k\022\020\n\010ClientId\030\001 \001(\r\022&\n\007RcvAddr\030\002 \001(\0132\025.D"
    "ss.Event.DssNetAddr\022\031\n\021StartServerHandle"
    "\030\003 \001(\r\022\024\n\014BridgeHandle\030\004 \001(\r\"j\n\023DssCltAd"
    "dBridgeNack\022\020\n\010ClientId\030\001 \001(\r\022&\n\007RcvAddr"
    "\030\002 \001(\0132\025.Dss.Event.DssNetAddr\022\031\n\021StartSe"
    "rverHandle\030\003 \001(\r\"\?\n\025CltDssRemoveBridgeCm"
    "d\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001("
    "\r\"g\n\025CltDssSendToBridgeReq\022\020\n\010ClientId\030\001"
    " \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022&\n\007RcvAddr\030\003 "
    "\001(\0132\025.Dss.Event.DssNetAddr\"g\n\025DssCltSend"
    "ToBridgeAck\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeH"
    "andle\030\002 \001(\r\022&\n\007RcvAddr\030\003 \001(\0132\025.Dss.Event"
    ".DssNetAddr\"h\n\026DssCltSendToBridgeNack\022\020\n"
    "\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022&\n"
    "\007RcvAddr\030\003 \001(\0132\025.Dss.Event.DssNetAddr\"k\n"
    "\031CltDssStopSendToBridgeCmd\022\020\n\010ClientId\030\001"
    " \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022&\n\007RcvAddr\030\003 "
    "\001(\0132\025.Dss.Event.DssNetAddr\"}\n\032CltDssRece"
    "iveFromBridgeReq\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014Br"
    "idgeHandle\030\002 \001(\r\022\017\n\007DstEpId\030\003 \001(\004\022&\n\007Dst"
    "Addr\030\004 \001(\0132\025.Dss.Event.DssNetAddr\"}\n\032Dss"
    "CltReceiveFromBridgeAck\022\020\n\010ClientId\030\001 \001("
    "\r\022\024\n\014BridgeHandle\030\002 \001(\r\022\017\n\007DstEpId\030\003 \001(\004"
    "\022&\n\007DstAddr\030\004 \001(\0132\025.Dss.Event.DssNetAddr"
    "\"~\n\033DssCltReceiveFromBridgeNack\022\020\n\010Clien"
    "tId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 \001(\r\022\017\n\007DstEp"
    "Id\030\003 \001(\004\022&\n\007DstAddr\030\004 \001(\0132\025.Dss.Event.Ds"
    "sNetAddr\"\251\001\n\036CltDssStopReceiveFromBridge"
    "Cmd\022\020\n\010ClientId\030\001 \001(\r\022\024\n\014BridgeHandle\030\002 "
    "\001(\r\022&\n\007MapAddr\030\003 \001(\0132\025.Dss.Event.DssNetA"
    "ddr\022\017\n\007DstEpId\030\004 \001(\004\022&\n\007DstAddr\030\005 \001(\0132\025."
    "Dss.Event.DssNetAddr\"\257\002\n\022CltDssAddSwitch"
    "Req\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007DstEpId\030\002 \001(\004\022&"
    "\n\007DstAddr\030\003 \001(\0132\025.Dss.Event.DssNetAddr\022&"
    "\n\007RcvAddr\030\004 \001(\0132\025.Dss.Event.DssNetAddr\022&"
    "\n\007MapAddr\030\005 \001(\0132\025.Dss.Event.DssNetAddr\022$"
    "\n\006DecKey\030\006 \001(\0132\024.Dss.Event.SecretKey\022$\n\006"
    "EncKey\030\007 \001(\0132\024.Dss.Event.SecretKey\022\017\n\007Un"
    "iform\030\010 \001(\010\022!\n\006dstype\030\t \001(\0162\021.Dss.Event."
    "DsType\"\252\001\n\022DssCltAddSwitchAck\022\020\n\010ClientI"
    "d\030\001 \001(\r\022\017\n\007DstEpId\030\002 \001(\004\022&\n\007DstAddr\030\003 \001("
    "\0132\025.Dss.Event.DssNetAddr\022&\n\007RcvAddr\030\004 \001("
    "\0132\025.Dss.Event.DssNetAddr\022!\n\006dstype\030\005 \001(\016"
    "2\021.Dss.Event.DsType\"\253\001\n\023DssCltAddSwitchN"
    "ack\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007DstEpId\030\002 \001(\004\022&"
    "\n\007DstAddr\030\003 \001(\0132\025.Dss.Event.DssNetAddr\022&"
    "\n\007RcvAddr\030\004 \001(\0132\025.Dss.Event.DssNetAddr\022!"
    "\n\006dstype\030\005 \001(\0162\021.Dss.Event.DsType\"\264\002\n\027Cl"
    "tDssAddM2OneSwitchReq\022\020\n\010ClientId\030\001 \001(\r\022"
    "\017\n\007DstEpId\030\002 \001(\004\022&\n\007DstAddr\030\003 \001(\0132\025.Dss."
    "Event.DssNetAddr\022&\n\007RcvAddr\030\004 \001(\0132\025.Dss."
    "Event.DssNetAddr\022&\n\007MapAddr\030\005 \001(\0132\025.Dss."
    "Event.DssNetAddr\022$\n\006DecKey\030\006 \001(\0132\024.Dss.E"
    "vent.SecretKey\022$\n\006EncKey\030\007 \001(\0132\024.Dss.Eve"
    "nt.SecretKey\022\017\n\007Uniform\030\010 \001(\010\022!\n\006dstype\030"
    "\t \001(\0162\021.Dss.Event.DsType\"\257\001\n\027DssCltAddM2"
    "OneSwitchAck\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007DstEpI"
    "d\030\002 \001(\004\022&\n\007DstAddr\030\003 \001(\0132\025.Dss.Event.Dss"
    "NetAddr\022&\n\007RcvAddr\030\004 \001(\0132\025.Dss.Event.Dss"
    "NetAddr\022!\n\006dstype\030\005 \001(\0162\021.Dss.Event.DsTy"
    "pe\"\260\001\n\030DssCltAddM2OneSwitchNack\022\020\n\010Clien"
    "tId\030\001 \001(\r\022\017\n\007DstEpId\030\002 \001(\004\022&\n\007DstAddr\030\003 "
    "\001(\0132\025.Dss.Event.DssNetAddr\022&\n\007RcvAddr\030\004 "
    "\001(\0132\025.Dss.Event.DssNetAddr\022!\n\006dstype\030\005 \001"
    "(\0162\021.Dss.Event.DsType\"\353\002\n\025CltDssAddSrcSw"
    "itchReq\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007SrcEpId\030\002 \001"
    "(\004\022&\n\007SrcAddr\030\003 \001(\0132\025.Dss.Event.DssNetAd"
    "dr\022\017\n\007DstEpId\030\004 \001(\004\022&\n\007DstAddr\030\005 \001(\0132\025.D"
    "ss.Event.DssNetAddr\022&\n\007RcvAddr\030\006 \001(\0132\025.D"
    "ss.Event.DssNetAddr\022&\n\007MapAddr\030\007 \001(\0132\025.D"
    "ss.Event.DssNetAddr\022$\n\006DecKey\030\010 \001(\0132\024.Ds"
    "s.Event.SecretKey\022$\n\006EncKey\030\t \001(\0132\024.Dss."
    "Event.SecretKey\022\017\n\007Uniform\030\n \001(\010\022!\n\006dsty"
    "pe\030\013 \001(\0162\021.Dss.Event.DsType\"\346\001\n\025DssCltAd"
    "dSrcSwitchAck\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007SrcEp"
    "Id\030\002 \001(\004\022&\n\007SrcAddr\030\003 \001(\0132\025.Dss.Event.Ds"
    "sNetAddr\022\017\n\007DstEpId\030\004 \001(\004\022&\n\007DstAddr\030\005 \001"
    "(\0132\025.Dss.Event.DssNetAddr\022&\n\007RcvAddr\030\006 \001"
    "(\0132\025.Dss.Event.DssNetAddr\022!\n\006dstype\030\007 \001("
    "\0162\021.Dss.Event.DsType\"\347\001\n\026DssCltAddSrcSwi"
    "tchNack\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007SrcEpId\030\002 \001"
    "(\004\022&\n\007SrcAddr\030\003 \001(\0132\025.Dss.Event.DssNetAd"
    "dr\022\017\n\007DstEpId\030\004 \001(\004\022&\n\007DstAddr\030\005 \001(\0132\025.D"
    "ss.Event.DssNetAddr\022&\n\007RcvAddr\030\006 \001(\0132\025.D"
    "ss.Event.DssNetAddr\022!\n\006dstype\030\007 \001(\0162\021.Ds"
    "s.Event.DsType\"\216\002\n\025CltDssRemoveSwitchCmd"
    "\022\020\n\010ClientId\030\001 \001(\r\022\017\n\007SrcEpId\030\002 \001(\004\022&\n\007S"
    "rcAddr\030\003 \001(\0132\025.Dss.Event.DssNetAddr\022\017\n\007D"
    "stEpId\030\004 \001(\004\022&\n\007DstAddr\030\005 \001(\0132\025.Dss.Even"
    "t.DssNetAddr\022&\n\007RcvAddr\030\006 \001(\0132\025.Dss.Even"
    "t.DssNetAddr\022&\n\007MapAddr\030\007 \001(\0132\025.Dss.Even"
    "t.DssNetAddr\022!\n\006dstype\030\010 \001(\0162\021.Dss.Event"
    ".DsType\"L\n\020CltDssAddDumpReq\022\020\n\010ClientId\030"
    "\001 \001(\r\022&\n\007RcvAddr\030\002 \001(\0132\025.Dss.Event.DssNe"
    "tAddr\"L\n\020DssCltAddDumpAck\022\020\n\010ClientId\030\001 "
    "\001(\r\022&\n\007RcvAddr\030\002 \001(\0132\025.Dss.Event.DssNetA"
    "ddr\"M\n\021DssCltAddDumpNack\022\020\n\010ClientId\030\001 \001"
    "(\r\022&\n\007RcvAddr\030\002 \001(\0132\025.Dss.Event.DssNetAd"
    "dr\"O\n\023CltDssRemoveDumpCmd\022\020\n\010ClientId\030\001 "
    "\001(\r\022&\n\007RcvAddr\030\002 \001(\0132\025.Dss.Event.DssNetA"
    "ddr\"7\n\020DssCltSrvLostNtf\022\020\n\010ClientId\030\001 \001("
    "\r\022\021\n\tSrvHandle\030\002 \001(\r\";\n\024DssCltSrvRegiste"
    "rNtf\022\020\n\010ClientId\030\001 \001(\r\022\021\n\tSrvHandle\030\002 \001("
    "\r\"(\n\024CltDssAliveDetectReq\022\020\n\010reserved\030\001 "
    "\001(\r\"(\n\024DssCltAliveDetectRsp\022\020\n\010reserved\030"
    "\001 \001(\r\"v\n\032CltDssAttachLanIpOfPortReq\022\020\n\010C"
    "lientId\030\001 \001(\r\022\021\n\tSrvHandle\030\002 \001(\r\022\014\n\004Port"
    "\030\003 \001(\r\022%\n\006subnet\030\004 \001(\0132\025.Dss.Event.DssNe"
    "tAddr\"_\n\032DssCltAttachLanIpOfPortAck\022\020\n\010C"
    "lientId\030\001 \001(\r\022\021\n\tSrvHandle\030\002 \001(\r\022\014\n\004Port"
    "\030\003 \001(\r\022\016\n\006IpAddr\030\004 \001(\t\"w\n\033DssCltAttachLa"
    "nIpOfPortNack\022\020\n\010ClientId\030\001 \001(\r\022\021\n\tSrvHa"
    "ndle\030\002 \001(\r\022\014\n\004Port\030\003 \001(\r\022%\n\006subnet\030\004 \001(\013"
    "2\025.Dss.Event.DssNetAddr\"|\n\032CltDssAttachW"
    "anIpOfPortReq\022\020\n\010ClientId\030\001 \001(\r\022\021\n\tSrvHa"
    "ndle\030\002 \001(\r\022\014\n\004Port\030\003 \001(\r\022+\n\013carriertype\030"
    "\004 \001(\0162\026.Dss.Event.CarrierType\"_\n\032DssCltA"
    "ttachWanIpOfPortAck\022\020\n\010ClientId\030\001 \001(\r\022\021\n"
    "\tSrvHandle\030\002 \001(\r\022\014\n\004Port\030\003 \001(\r\022\016\n\006IpAddr"
    "\030\004 \001(\t\"}\n\033DssCltAttachWanIpOfPortNack\022\020\n"
    "\010ClientId\030\001 \001(\r\022\021\n\tSrvHandle\030\002 \001(\r\022\014\n\004Po"
    "rt\030\003 \001(\r\022+\n\013carriertype\030\004 \001(\0162\026.Dss.Even"
    "t.CarrierTypeB\002H\002P\000", 7419);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dssevent.proto", &protobuf_RegisterTypes);
  DssCltCreatClientReq::default_instance_ = new DssCltCreatClientReq();
  DssCltCreatClientAck::default_instance_ = new DssCltCreatClientAck();
  DssCltPing::default_instance_ = new DssCltPing();
  CltDssPong::default_instance_ = new CltDssPong();
  DssCltCreatClientNack::default_instance_ = new DssCltCreatClientNack();
  CltDssDestroyClientCmd::default_instance_ = new CltDssDestroyClientCmd();
  CltDssSyncApplyLanPortReq::default_instance_ = new CltDssSyncApplyLanPortReq();
  DssCltSyncApplyLanPortReply::default_instance_ = new DssCltSyncApplyLanPortReply();
  CltDssSyncApplyConsLanPortReq::default_instance_ = new CltDssSyncApplyConsLanPortReq();
  DssCltSyncApplyConsLanPortReply::default_instance_ = new DssCltSyncApplyConsLanPortReply();
  CltDssASyncApplyConsLanPortReq::default_instance_ = new CltDssASyncApplyConsLanPortReq();
  DssCltASyncApplyConsLanPortReply::default_instance_ = new DssCltASyncApplyConsLanPortReply();
  CltDssSyncApplyWanPortReq::default_instance_ = new CltDssSyncApplyWanPortReq();
  DssCltSyncApplyWanPortReply::default_instance_ = new DssCltSyncApplyWanPortReply();
  CltDssASyncApplyLanPortReq::default_instance_ = new CltDssASyncApplyLanPortReq();
  DssCltASyncApplyLanPortReply::default_instance_ = new DssCltASyncApplyLanPortReply();
  CltDssASyncApplyWanPortReq::default_instance_ = new CltDssASyncApplyWanPortReq();
  DssCltASyncApplyWanPortReply::default_instance_ = new DssCltASyncApplyWanPortReply();
  CltDssReleasePortCmd::default_instance_ = new CltDssReleasePortCmd();
  CltDssAddBridgeReq::default_instance_ = new CltDssAddBridgeReq();
  DssCltAddBridgeAck::default_instance_ = new DssCltAddBridgeAck();
  DssCltAddBridgeNack::default_instance_ = new DssCltAddBridgeNack();
  CltDssRemoveBridgeCmd::default_instance_ = new CltDssRemoveBridgeCmd();
  CltDssSendToBridgeReq::default_instance_ = new CltDssSendToBridgeReq();
  DssCltSendToBridgeAck::default_instance_ = new DssCltSendToBridgeAck();
  DssCltSendToBridgeNack::default_instance_ = new DssCltSendToBridgeNack();
  CltDssStopSendToBridgeCmd::default_instance_ = new CltDssStopSendToBridgeCmd();
  CltDssReceiveFromBridgeReq::default_instance_ = new CltDssReceiveFromBridgeReq();
  DssCltReceiveFromBridgeAck::default_instance_ = new DssCltReceiveFromBridgeAck();
  DssCltReceiveFromBridgeNack::default_instance_ = new DssCltReceiveFromBridgeNack();
  CltDssStopReceiveFromBridgeCmd::default_instance_ = new CltDssStopReceiveFromBridgeCmd();
  CltDssAddSwitchReq::default_instance_ = new CltDssAddSwitchReq();
  DssCltAddSwitchAck::default_instance_ = new DssCltAddSwitchAck();
  DssCltAddSwitchNack::default_instance_ = new DssCltAddSwitchNack();
  CltDssAddM2OneSwitchReq::default_instance_ = new CltDssAddM2OneSwitchReq();
  DssCltAddM2OneSwitchAck::default_instance_ = new DssCltAddM2OneSwitchAck();
  DssCltAddM2OneSwitchNack::default_instance_ = new DssCltAddM2OneSwitchNack();
  CltDssAddSrcSwitchReq::default_instance_ = new CltDssAddSrcSwitchReq();
  DssCltAddSrcSwitchAck::default_instance_ = new DssCltAddSrcSwitchAck();
  DssCltAddSrcSwitchNack::default_instance_ = new DssCltAddSrcSwitchNack();
  CltDssRemoveSwitchCmd::default_instance_ = new CltDssRemoveSwitchCmd();
  CltDssAddDumpReq::default_instance_ = new CltDssAddDumpReq();
  DssCltAddDumpAck::default_instance_ = new DssCltAddDumpAck();
  DssCltAddDumpNack::default_instance_ = new DssCltAddDumpNack();
  CltDssRemoveDumpCmd::default_instance_ = new CltDssRemoveDumpCmd();
  DssCltSrvLostNtf::default_instance_ = new DssCltSrvLostNtf();
  DssCltSrvRegisterNtf::default_instance_ = new DssCltSrvRegisterNtf();
  CltDssAliveDetectReq::default_instance_ = new CltDssAliveDetectReq();
  DssCltAliveDetectRsp::default_instance_ = new DssCltAliveDetectRsp();
  CltDssAttachLanIpOfPortReq::default_instance_ = new CltDssAttachLanIpOfPortReq();
  DssCltAttachLanIpOfPortAck::default_instance_ = new DssCltAttachLanIpOfPortAck();
  DssCltAttachLanIpOfPortNack::default_instance_ = new DssCltAttachLanIpOfPortNack();
  CltDssAttachWanIpOfPortReq::default_instance_ = new CltDssAttachWanIpOfPortReq();
  DssCltAttachWanIpOfPortAck::default_instance_ = new DssCltAttachWanIpOfPortAck();
  DssCltAttachWanIpOfPortNack::default_instance_ = new DssCltAttachWanIpOfPortNack();
  DssCltCreatClientReq::default_instance_->InitAsDefaultInstance();
  DssCltCreatClientAck::default_instance_->InitAsDefaultInstance();
  DssCltPing::default_instance_->InitAsDefaultInstance();
  CltDssPong::default_instance_->InitAsDefaultInstance();
  DssCltCreatClientNack::default_instance_->InitAsDefaultInstance();
  CltDssDestroyClientCmd::default_instance_->InitAsDefaultInstance();
  CltDssSyncApplyLanPortReq::default_instance_->InitAsDefaultInstance();
  DssCltSyncApplyLanPortReply::default_instance_->InitAsDefaultInstance();
  CltDssSyncApplyConsLanPortReq::default_instance_->InitAsDefaultInstance();
  DssCltSyncApplyConsLanPortReply::default_instance_->InitAsDefaultInstance();
  CltDssASyncApplyConsLanPortReq::default_instance_->InitAsDefaultInstance();
  DssCltASyncApplyConsLanPortReply::default_instance_->InitAsDefaultInstance();
  CltDssSyncApplyWanPortReq::default_instance_->InitAsDefaultInstance();
  DssCltSyncApplyWanPortReply::default_instance_->InitAsDefaultInstance();
  CltDssASyncApplyLanPortReq::default_instance_->InitAsDefaultInstance();
  DssCltASyncApplyLanPortReply::default_instance_->InitAsDefaultInstance();
  CltDssASyncApplyWanPortReq::default_instance_->InitAsDefaultInstance();
  DssCltASyncApplyWanPortReply::default_instance_->InitAsDefaultInstance();
  CltDssReleasePortCmd::default_instance_->InitAsDefaultInstance();
  CltDssAddBridgeReq::default_instance_->InitAsDefaultInstance();
  DssCltAddBridgeAck::default_instance_->InitAsDefaultInstance();
  DssCltAddBridgeNack::default_instance_->InitAsDefaultInstance();
  CltDssRemoveBridgeCmd::default_instance_->InitAsDefaultInstance();
  CltDssSendToBridgeReq::default_instance_->InitAsDefaultInstance();
  DssCltSendToBridgeAck::default_instance_->InitAsDefaultInstance();
  DssCltSendToBridgeNack::default_instance_->InitAsDefaultInstance();
  CltDssStopSendToBridgeCmd::default_instance_->InitAsDefaultInstance();
  CltDssReceiveFromBridgeReq::default_instance_->InitAsDefaultInstance();
  DssCltReceiveFromBridgeAck::default_instance_->InitAsDefaultInstance();
  DssCltReceiveFromBridgeNack::default_instance_->InitAsDefaultInstance();
  CltDssStopReceiveFromBridgeCmd::default_instance_->InitAsDefaultInstance();
  CltDssAddSwitchReq::default_instance_->InitAsDefaultInstance();
  DssCltAddSwitchAck::default_instance_->InitAsDefaultInstance();
  DssCltAddSwitchNack::default_instance_->InitAsDefaultInstance();
  CltDssAddM2OneSwitchReq::default_instance_->InitAsDefaultInstance();
  DssCltAddM2OneSwitchAck::default_instance_->InitAsDefaultInstance();
  DssCltAddM2OneSwitchNack::default_instance_->InitAsDefaultInstance();
  CltDssAddSrcSwitchReq::default_instance_->InitAsDefaultInstance();
  DssCltAddSrcSwitchAck::default_instance_->InitAsDefaultInstance();
  DssCltAddSrcSwitchNack::default_instance_->InitAsDefaultInstance();
  CltDssRemoveSwitchCmd::default_instance_->InitAsDefaultInstance();
  CltDssAddDumpReq::default_instance_->InitAsDefaultInstance();
  DssCltAddDumpAck::default_instance_->InitAsDefaultInstance();
  DssCltAddDumpNack::default_instance_->InitAsDefaultInstance();
  CltDssRemoveDumpCmd::default_instance_->InitAsDefaultInstance();
  DssCltSrvLostNtf::default_instance_->InitAsDefaultInstance();
  DssCltSrvRegisterNtf::default_instance_->InitAsDefaultInstance();
  CltDssAliveDetectReq::default_instance_->InitAsDefaultInstance();
  DssCltAliveDetectRsp::default_instance_->InitAsDefaultInstance();
  CltDssAttachLanIpOfPortReq::default_instance_->InitAsDefaultInstance();
  DssCltAttachLanIpOfPortAck::default_instance_->InitAsDefaultInstance();
  DssCltAttachLanIpOfPortNack::default_instance_->InitAsDefaultInstance();
  CltDssAttachWanIpOfPortReq::default_instance_->InitAsDefaultInstance();
  DssCltAttachWanIpOfPortAck::default_instance_->InitAsDefaultInstance();
  DssCltAttachWanIpOfPortNack::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dssevent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dssevent_2eproto {
  StaticDescriptorInitializer_dssevent_2eproto() {
    protobuf_AddDesc_dssevent_2eproto();
  }
} static_descriptor_initializer_dssevent_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DssCltCreatClientReq::kAliasFieldNumber;
const int DssCltCreatClientReq::kTypeFieldNumber;
const int DssCltCreatClientReq::kQNameFieldNumber;
#endif  // !_MSC_VER

DssCltCreatClientReq::DssCltCreatClientReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltCreatClientReq::InitAsDefaultInstance() {
}

DssCltCreatClientReq::DssCltCreatClientReq(const DssCltCreatClientReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltCreatClientReq::SharedCtor() {
  _cached_size_ = 0;
  alias_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  qname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltCreatClientReq::~DssCltCreatClientReq() {
  SharedDtor();
}

void DssCltCreatClientReq::SharedDtor() {
  if (alias_ != &::google::protobuf::internal::kEmptyString) {
    delete alias_;
  }
  if (qname_ != &::google::protobuf::internal::kEmptyString) {
    delete qname_;
  }
  if (this != default_instance_) {
  }
}

void DssCltCreatClientReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltCreatClientReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltCreatClientReq_descriptor_;
}

const DssCltCreatClientReq& DssCltCreatClientReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltCreatClientReq* DssCltCreatClientReq::default_instance_ = NULL;

DssCltCreatClientReq* DssCltCreatClientReq::New() const {
  return new DssCltCreatClientReq;
}

void DssCltCreatClientReq::Swap(DssCltCreatClientReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltCreatClientReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltCreatClientReq_descriptor_;
  metadata.reflection = DssCltCreatClientReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltCreatClientAck::kAliasFieldNumber;
const int DssCltCreatClientAck::kTypeFieldNumber;
const int DssCltCreatClientAck::kClientIdFieldNumber;
const int DssCltCreatClientAck::kKeepalivetimeFieldNumber;
#endif  // !_MSC_VER

DssCltCreatClientAck::DssCltCreatClientAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltCreatClientAck::InitAsDefaultInstance() {
}

DssCltCreatClientAck::DssCltCreatClientAck(const DssCltCreatClientAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltCreatClientAck::SharedCtor() {
  _cached_size_ = 0;
  alias_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  clientid_ = 0u;
  keepalivetime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltCreatClientAck::~DssCltCreatClientAck() {
  SharedDtor();
}

void DssCltCreatClientAck::SharedDtor() {
  if (alias_ != &::google::protobuf::internal::kEmptyString) {
    delete alias_;
  }
  if (this != default_instance_) {
  }
}

void DssCltCreatClientAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltCreatClientAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltCreatClientAck_descriptor_;
}

const DssCltCreatClientAck& DssCltCreatClientAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltCreatClientAck* DssCltCreatClientAck::default_instance_ = NULL;

DssCltCreatClientAck* DssCltCreatClientAck::New() const {
  return new DssCltCreatClientAck;
}

void DssCltCreatClientAck::Swap(DssCltCreatClientAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltCreatClientAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltCreatClientAck_descriptor_;
  metadata.reflection = DssCltCreatClientAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltPing::kClientIdFieldNumber;
#endif  // !_MSC_VER

DssCltPing::DssCltPing()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltPing::InitAsDefaultInstance() {
}

DssCltPing::DssCltPing(const DssCltPing& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltPing::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltPing::~DssCltPing() {
  SharedDtor();
}

void DssCltPing::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DssCltPing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltPing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltPing_descriptor_;
}

const DssCltPing& DssCltPing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltPing* DssCltPing::default_instance_ = NULL;

DssCltPing* DssCltPing::New() const {
  return new DssCltPing;
}

void DssCltPing::Swap(DssCltPing* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltPing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltPing_descriptor_;
  metadata.reflection = DssCltPing_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssPong::kClientIdFieldNumber;
#endif  // !_MSC_VER

CltDssPong::CltDssPong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssPong::InitAsDefaultInstance() {
}

CltDssPong::CltDssPong(const CltDssPong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssPong::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssPong::~CltDssPong() {
  SharedDtor();
}

void CltDssPong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CltDssPong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssPong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssPong_descriptor_;
}

const CltDssPong& CltDssPong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssPong* CltDssPong::default_instance_ = NULL;

CltDssPong* CltDssPong::New() const {
  return new CltDssPong;
}

void CltDssPong::Swap(CltDssPong* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssPong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssPong_descriptor_;
  metadata.reflection = CltDssPong_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltCreatClientNack::kAliasFieldNumber;
const int DssCltCreatClientNack::kTypeFieldNumber;
#endif  // !_MSC_VER

DssCltCreatClientNack::DssCltCreatClientNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltCreatClientNack::InitAsDefaultInstance() {
}

DssCltCreatClientNack::DssCltCreatClientNack(const DssCltCreatClientNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltCreatClientNack::SharedCtor() {
  _cached_size_ = 0;
  alias_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltCreatClientNack::~DssCltCreatClientNack() {
  SharedDtor();
}

void DssCltCreatClientNack::SharedDtor() {
  if (alias_ != &::google::protobuf::internal::kEmptyString) {
    delete alias_;
  }
  if (this != default_instance_) {
  }
}

void DssCltCreatClientNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltCreatClientNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltCreatClientNack_descriptor_;
}

const DssCltCreatClientNack& DssCltCreatClientNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltCreatClientNack* DssCltCreatClientNack::default_instance_ = NULL;

DssCltCreatClientNack* DssCltCreatClientNack::New() const {
  return new DssCltCreatClientNack;
}

void DssCltCreatClientNack::Swap(DssCltCreatClientNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltCreatClientNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltCreatClientNack_descriptor_;
  metadata.reflection = DssCltCreatClientNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssDestroyClientCmd::kClientIdFieldNumber;
#endif  // !_MSC_VER

CltDssDestroyClientCmd::CltDssDestroyClientCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssDestroyClientCmd::InitAsDefaultInstance() {
}

CltDssDestroyClientCmd::CltDssDestroyClientCmd(const CltDssDestroyClientCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssDestroyClientCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssDestroyClientCmd::~CltDssDestroyClientCmd() {
  SharedDtor();
}

void CltDssDestroyClientCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CltDssDestroyClientCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssDestroyClientCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssDestroyClientCmd_descriptor_;
}

const CltDssDestroyClientCmd& CltDssDestroyClientCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssDestroyClientCmd* CltDssDestroyClientCmd::default_instance_ = NULL;

CltDssDestroyClientCmd* CltDssDestroyClientCmd::New() const {
  return new CltDssDestroyClientCmd;
}

void CltDssDestroyClientCmd::Swap(CltDssDestroyClientCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssDestroyClientCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssDestroyClientCmd_descriptor_;
  metadata.reflection = CltDssDestroyClientCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssSyncApplyLanPortReq::kClientIdFieldNumber;
const int CltDssSyncApplyLanPortReq::kMeetingHandleFieldNumber;
const int CltDssSyncApplyLanPortReq::kBandWidthFieldNumber;
const int CltDssSyncApplyLanPortReq::kPortdescFieldNumber;
#endif  // !_MSC_VER

CltDssSyncApplyLanPortReq::CltDssSyncApplyLanPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssSyncApplyLanPortReq::InitAsDefaultInstance() {
}

CltDssSyncApplyLanPortReq::CltDssSyncApplyLanPortReq(const CltDssSyncApplyLanPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssSyncApplyLanPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssSyncApplyLanPortReq::~CltDssSyncApplyLanPortReq() {
  SharedDtor();
}

void CltDssSyncApplyLanPortReq::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void CltDssSyncApplyLanPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssSyncApplyLanPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssSyncApplyLanPortReq_descriptor_;
}

const CltDssSyncApplyLanPortReq& CltDssSyncApplyLanPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssSyncApplyLanPortReq* CltDssSyncApplyLanPortReq::default_instance_ = NULL;

CltDssSyncApplyLanPortReq* CltDssSyncApplyLanPortReq::New() const {
  return new CltDssSyncApplyLanPortReq;
}

void CltDssSyncApplyLanPortReq::Swap(CltDssSyncApplyLanPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssSyncApplyLanPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssSyncApplyLanPortReq_descriptor_;
  metadata.reflection = CltDssSyncApplyLanPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSyncApplyLanPortReply::kClientIdFieldNumber;
const int DssCltSyncApplyLanPortReply::kMeetingHandleFieldNumber;
const int DssCltSyncApplyLanPortReply::kBandWidthFieldNumber;
const int DssCltSyncApplyLanPortReply::kReplyFieldNumber;
#endif  // !_MSC_VER

DssCltSyncApplyLanPortReply::DssCltSyncApplyLanPortReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSyncApplyLanPortReply::InitAsDefaultInstance() {
}

DssCltSyncApplyLanPortReply::DssCltSyncApplyLanPortReply(const DssCltSyncApplyLanPortReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSyncApplyLanPortReply::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSyncApplyLanPortReply::~DssCltSyncApplyLanPortReply() {
  SharedDtor();
}

void DssCltSyncApplyLanPortReply::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void DssCltSyncApplyLanPortReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSyncApplyLanPortReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSyncApplyLanPortReply_descriptor_;
}

const DssCltSyncApplyLanPortReply& DssCltSyncApplyLanPortReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSyncApplyLanPortReply* DssCltSyncApplyLanPortReply::default_instance_ = NULL;

DssCltSyncApplyLanPortReply* DssCltSyncApplyLanPortReply::New() const {
  return new DssCltSyncApplyLanPortReply;
}

void DssCltSyncApplyLanPortReply::Swap(DssCltSyncApplyLanPortReply* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSyncApplyLanPortReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSyncApplyLanPortReply_descriptor_;
  metadata.reflection = DssCltSyncApplyLanPortReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssSyncApplyConsLanPortReq::kClientIdFieldNumber;
const int CltDssSyncApplyConsLanPortReq::kMeetingHandleFieldNumber;
const int CltDssSyncApplyConsLanPortReq::kBandWidthFieldNumber;
const int CltDssSyncApplyConsLanPortReq::kPortdescFieldNumber;
const int CltDssSyncApplyConsLanPortReq::kForceIpFieldNumber;
const int CltDssSyncApplyConsLanPortReq::kAdaptiveFieldNumber;
const int CltDssSyncApplyConsLanPortReq::kConsPortNumFieldNumber;
#endif  // !_MSC_VER

CltDssSyncApplyConsLanPortReq::CltDssSyncApplyConsLanPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssSyncApplyConsLanPortReq::InitAsDefaultInstance() {
  portdesc_ = const_cast< ::Dss::Event::ApplyLanPort*>(&::Dss::Event::ApplyLanPort::default_instance());
}

CltDssSyncApplyConsLanPortReq::CltDssSyncApplyConsLanPortReq(const CltDssSyncApplyConsLanPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssSyncApplyConsLanPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  portdesc_ = NULL;
  forceip_ = false;
  adaptive_ = false;
  consportnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssSyncApplyConsLanPortReq::~CltDssSyncApplyConsLanPortReq() {
  SharedDtor();
}

void CltDssSyncApplyConsLanPortReq::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
    delete portdesc_;
  }
}

void CltDssSyncApplyConsLanPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssSyncApplyConsLanPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssSyncApplyConsLanPortReq_descriptor_;
}

const CltDssSyncApplyConsLanPortReq& CltDssSyncApplyConsLanPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssSyncApplyConsLanPortReq* CltDssSyncApplyConsLanPortReq::default_instance_ = NULL;

CltDssSyncApplyConsLanPortReq* CltDssSyncApplyConsLanPortReq::New() const {
  return new CltDssSyncApplyConsLanPortReq;
}

void CltDssSyncApplyConsLanPortReq::Swap(CltDssSyncApplyConsLanPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssSyncApplyConsLanPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssSyncApplyConsLanPortReq_descriptor_;
  metadata.reflection = CltDssSyncApplyConsLanPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSyncApplyConsLanPortReply::kClientIdFieldNumber;
const int DssCltSyncApplyConsLanPortReply::kMeetingHandleFieldNumber;
const int DssCltSyncApplyConsLanPortReply::kBandWidthFieldNumber;
const int DssCltSyncApplyConsLanPortReply::kReplyFieldNumber;
const int DssCltSyncApplyConsLanPortReply::kForceIpFieldNumber;
const int DssCltSyncApplyConsLanPortReply::kAdaptiveFieldNumber;
const int DssCltSyncApplyConsLanPortReply::kConsPortNumFieldNumber;
#endif  // !_MSC_VER

DssCltSyncApplyConsLanPortReply::DssCltSyncApplyConsLanPortReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSyncApplyConsLanPortReply::InitAsDefaultInstance() {
  reply_ = const_cast< ::Dss::Event::ApplyLanPortReply*>(&::Dss::Event::ApplyLanPortReply::default_instance());
}

DssCltSyncApplyConsLanPortReply::DssCltSyncApplyConsLanPortReply(const DssCltSyncApplyConsLanPortReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSyncApplyConsLanPortReply::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  reply_ = NULL;
  forceip_ = false;
  adaptive_ = false;
  consportnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSyncApplyConsLanPortReply::~DssCltSyncApplyConsLanPortReply() {
  SharedDtor();
}

void DssCltSyncApplyConsLanPortReply::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
    delete reply_;
  }
}

void DssCltSyncApplyConsLanPortReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSyncApplyConsLanPortReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSyncApplyConsLanPortReply_descriptor_;
}

const DssCltSyncApplyConsLanPortReply& DssCltSyncApplyConsLanPortReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSyncApplyConsLanPortReply* DssCltSyncApplyConsLanPortReply::default_instance_ = NULL;

DssCltSyncApplyConsLanPortReply* DssCltSyncApplyConsLanPortReply::New() const {
  return new DssCltSyncApplyConsLanPortReply;
}

void DssCltSyncApplyConsLanPortReply::Swap(DssCltSyncApplyConsLanPortReply* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSyncApplyConsLanPortReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSyncApplyConsLanPortReply_descriptor_;
  metadata.reflection = DssCltSyncApplyConsLanPortReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssASyncApplyConsLanPortReq::kClientIdFieldNumber;
const int CltDssASyncApplyConsLanPortReq::kMeetingHandleFieldNumber;
const int CltDssASyncApplyConsLanPortReq::kBandWidthFieldNumber;
const int CltDssASyncApplyConsLanPortReq::kPortdescFieldNumber;
const int CltDssASyncApplyConsLanPortReq::kForceIpFieldNumber;
const int CltDssASyncApplyConsLanPortReq::kAdaptiveFieldNumber;
const int CltDssASyncApplyConsLanPortReq::kConsPortNumFieldNumber;
#endif  // !_MSC_VER

CltDssASyncApplyConsLanPortReq::CltDssASyncApplyConsLanPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssASyncApplyConsLanPortReq::InitAsDefaultInstance() {
  portdesc_ = const_cast< ::Dss::Event::ApplyLanPort*>(&::Dss::Event::ApplyLanPort::default_instance());
}

CltDssASyncApplyConsLanPortReq::CltDssASyncApplyConsLanPortReq(const CltDssASyncApplyConsLanPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssASyncApplyConsLanPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  portdesc_ = NULL;
  forceip_ = false;
  adaptive_ = false;
  consportnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssASyncApplyConsLanPortReq::~CltDssASyncApplyConsLanPortReq() {
  SharedDtor();
}

void CltDssASyncApplyConsLanPortReq::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
    delete portdesc_;
  }
}

void CltDssASyncApplyConsLanPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssASyncApplyConsLanPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssASyncApplyConsLanPortReq_descriptor_;
}

const CltDssASyncApplyConsLanPortReq& CltDssASyncApplyConsLanPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssASyncApplyConsLanPortReq* CltDssASyncApplyConsLanPortReq::default_instance_ = NULL;

CltDssASyncApplyConsLanPortReq* CltDssASyncApplyConsLanPortReq::New() const {
  return new CltDssASyncApplyConsLanPortReq;
}

void CltDssASyncApplyConsLanPortReq::Swap(CltDssASyncApplyConsLanPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssASyncApplyConsLanPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssASyncApplyConsLanPortReq_descriptor_;
  metadata.reflection = CltDssASyncApplyConsLanPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltASyncApplyConsLanPortReply::kClientIdFieldNumber;
const int DssCltASyncApplyConsLanPortReply::kMeetingHandleFieldNumber;
const int DssCltASyncApplyConsLanPortReply::kBandWidthFieldNumber;
const int DssCltASyncApplyConsLanPortReply::kReplyFieldNumber;
const int DssCltASyncApplyConsLanPortReply::kForceIpFieldNumber;
const int DssCltASyncApplyConsLanPortReply::kAdaptiveFieldNumber;
const int DssCltASyncApplyConsLanPortReply::kConsPortNumFieldNumber;
#endif  // !_MSC_VER

DssCltASyncApplyConsLanPortReply::DssCltASyncApplyConsLanPortReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltASyncApplyConsLanPortReply::InitAsDefaultInstance() {
  reply_ = const_cast< ::Dss::Event::ApplyLanPortReply*>(&::Dss::Event::ApplyLanPortReply::default_instance());
}

DssCltASyncApplyConsLanPortReply::DssCltASyncApplyConsLanPortReply(const DssCltASyncApplyConsLanPortReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltASyncApplyConsLanPortReply::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  reply_ = NULL;
  forceip_ = false;
  adaptive_ = false;
  consportnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltASyncApplyConsLanPortReply::~DssCltASyncApplyConsLanPortReply() {
  SharedDtor();
}

void DssCltASyncApplyConsLanPortReply::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
    delete reply_;
  }
}

void DssCltASyncApplyConsLanPortReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltASyncApplyConsLanPortReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltASyncApplyConsLanPortReply_descriptor_;
}

const DssCltASyncApplyConsLanPortReply& DssCltASyncApplyConsLanPortReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltASyncApplyConsLanPortReply* DssCltASyncApplyConsLanPortReply::default_instance_ = NULL;

DssCltASyncApplyConsLanPortReply* DssCltASyncApplyConsLanPortReply::New() const {
  return new DssCltASyncApplyConsLanPortReply;
}

void DssCltASyncApplyConsLanPortReply::Swap(DssCltASyncApplyConsLanPortReply* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltASyncApplyConsLanPortReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltASyncApplyConsLanPortReply_descriptor_;
  metadata.reflection = DssCltASyncApplyConsLanPortReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssSyncApplyWanPortReq::kClientIdFieldNumber;
const int CltDssSyncApplyWanPortReq::kMeetingHandleFieldNumber;
const int CltDssSyncApplyWanPortReq::kBandWidthFieldNumber;
const int CltDssSyncApplyWanPortReq::kPortdescFieldNumber;
#endif  // !_MSC_VER

CltDssSyncApplyWanPortReq::CltDssSyncApplyWanPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssSyncApplyWanPortReq::InitAsDefaultInstance() {
}

CltDssSyncApplyWanPortReq::CltDssSyncApplyWanPortReq(const CltDssSyncApplyWanPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssSyncApplyWanPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssSyncApplyWanPortReq::~CltDssSyncApplyWanPortReq() {
  SharedDtor();
}

void CltDssSyncApplyWanPortReq::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void CltDssSyncApplyWanPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssSyncApplyWanPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssSyncApplyWanPortReq_descriptor_;
}

const CltDssSyncApplyWanPortReq& CltDssSyncApplyWanPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssSyncApplyWanPortReq* CltDssSyncApplyWanPortReq::default_instance_ = NULL;

CltDssSyncApplyWanPortReq* CltDssSyncApplyWanPortReq::New() const {
  return new CltDssSyncApplyWanPortReq;
}

void CltDssSyncApplyWanPortReq::Swap(CltDssSyncApplyWanPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssSyncApplyWanPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssSyncApplyWanPortReq_descriptor_;
  metadata.reflection = CltDssSyncApplyWanPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSyncApplyWanPortReply::kClientIdFieldNumber;
const int DssCltSyncApplyWanPortReply::kMeetingHandleFieldNumber;
const int DssCltSyncApplyWanPortReply::kBandWidthFieldNumber;
const int DssCltSyncApplyWanPortReply::kReplyFieldNumber;
#endif  // !_MSC_VER

DssCltSyncApplyWanPortReply::DssCltSyncApplyWanPortReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSyncApplyWanPortReply::InitAsDefaultInstance() {
}

DssCltSyncApplyWanPortReply::DssCltSyncApplyWanPortReply(const DssCltSyncApplyWanPortReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSyncApplyWanPortReply::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSyncApplyWanPortReply::~DssCltSyncApplyWanPortReply() {
  SharedDtor();
}

void DssCltSyncApplyWanPortReply::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void DssCltSyncApplyWanPortReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSyncApplyWanPortReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSyncApplyWanPortReply_descriptor_;
}

const DssCltSyncApplyWanPortReply& DssCltSyncApplyWanPortReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSyncApplyWanPortReply* DssCltSyncApplyWanPortReply::default_instance_ = NULL;

DssCltSyncApplyWanPortReply* DssCltSyncApplyWanPortReply::New() const {
  return new DssCltSyncApplyWanPortReply;
}

void DssCltSyncApplyWanPortReply::Swap(DssCltSyncApplyWanPortReply* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSyncApplyWanPortReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSyncApplyWanPortReply_descriptor_;
  metadata.reflection = DssCltSyncApplyWanPortReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssASyncApplyLanPortReq::kClientIdFieldNumber;
const int CltDssASyncApplyLanPortReq::kMeetingHandleFieldNumber;
const int CltDssASyncApplyLanPortReq::kBandWidthFieldNumber;
const int CltDssASyncApplyLanPortReq::kPortdescFieldNumber;
#endif  // !_MSC_VER

CltDssASyncApplyLanPortReq::CltDssASyncApplyLanPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssASyncApplyLanPortReq::InitAsDefaultInstance() {
}

CltDssASyncApplyLanPortReq::CltDssASyncApplyLanPortReq(const CltDssASyncApplyLanPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssASyncApplyLanPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssASyncApplyLanPortReq::~CltDssASyncApplyLanPortReq() {
  SharedDtor();
}

void CltDssASyncApplyLanPortReq::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void CltDssASyncApplyLanPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssASyncApplyLanPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssASyncApplyLanPortReq_descriptor_;
}

const CltDssASyncApplyLanPortReq& CltDssASyncApplyLanPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssASyncApplyLanPortReq* CltDssASyncApplyLanPortReq::default_instance_ = NULL;

CltDssASyncApplyLanPortReq* CltDssASyncApplyLanPortReq::New() const {
  return new CltDssASyncApplyLanPortReq;
}

void CltDssASyncApplyLanPortReq::Swap(CltDssASyncApplyLanPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssASyncApplyLanPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssASyncApplyLanPortReq_descriptor_;
  metadata.reflection = CltDssASyncApplyLanPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltASyncApplyLanPortReply::kClientIdFieldNumber;
const int DssCltASyncApplyLanPortReply::kMeetingHandleFieldNumber;
const int DssCltASyncApplyLanPortReply::kBandWidthFieldNumber;
const int DssCltASyncApplyLanPortReply::kReplyFieldNumber;
#endif  // !_MSC_VER

DssCltASyncApplyLanPortReply::DssCltASyncApplyLanPortReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltASyncApplyLanPortReply::InitAsDefaultInstance() {
}

DssCltASyncApplyLanPortReply::DssCltASyncApplyLanPortReply(const DssCltASyncApplyLanPortReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltASyncApplyLanPortReply::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltASyncApplyLanPortReply::~DssCltASyncApplyLanPortReply() {
  SharedDtor();
}

void DssCltASyncApplyLanPortReply::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void DssCltASyncApplyLanPortReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltASyncApplyLanPortReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltASyncApplyLanPortReply_descriptor_;
}

const DssCltASyncApplyLanPortReply& DssCltASyncApplyLanPortReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltASyncApplyLanPortReply* DssCltASyncApplyLanPortReply::default_instance_ = NULL;

DssCltASyncApplyLanPortReply* DssCltASyncApplyLanPortReply::New() const {
  return new DssCltASyncApplyLanPortReply;
}

void DssCltASyncApplyLanPortReply::Swap(DssCltASyncApplyLanPortReply* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltASyncApplyLanPortReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltASyncApplyLanPortReply_descriptor_;
  metadata.reflection = DssCltASyncApplyLanPortReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssASyncApplyWanPortReq::kClientIdFieldNumber;
const int CltDssASyncApplyWanPortReq::kMeetingHandleFieldNumber;
const int CltDssASyncApplyWanPortReq::kBandWidthFieldNumber;
const int CltDssASyncApplyWanPortReq::kPortdescFieldNumber;
#endif  // !_MSC_VER

CltDssASyncApplyWanPortReq::CltDssASyncApplyWanPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssASyncApplyWanPortReq::InitAsDefaultInstance() {
}

CltDssASyncApplyWanPortReq::CltDssASyncApplyWanPortReq(const CltDssASyncApplyWanPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssASyncApplyWanPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssASyncApplyWanPortReq::~CltDssASyncApplyWanPortReq() {
  SharedDtor();
}

void CltDssASyncApplyWanPortReq::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void CltDssASyncApplyWanPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssASyncApplyWanPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssASyncApplyWanPortReq_descriptor_;
}

const CltDssASyncApplyWanPortReq& CltDssASyncApplyWanPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssASyncApplyWanPortReq* CltDssASyncApplyWanPortReq::default_instance_ = NULL;

CltDssASyncApplyWanPortReq* CltDssASyncApplyWanPortReq::New() const {
  return new CltDssASyncApplyWanPortReq;
}

void CltDssASyncApplyWanPortReq::Swap(CltDssASyncApplyWanPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssASyncApplyWanPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssASyncApplyWanPortReq_descriptor_;
  metadata.reflection = CltDssASyncApplyWanPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltASyncApplyWanPortReply::kClientIdFieldNumber;
const int DssCltASyncApplyWanPortReply::kMeetingHandleFieldNumber;
const int DssCltASyncApplyWanPortReply::kBandWidthFieldNumber;
const int DssCltASyncApplyWanPortReply::kReplyFieldNumber;
#endif  // !_MSC_VER

DssCltASyncApplyWanPortReply::DssCltASyncApplyWanPortReply()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltASyncApplyWanPortReply::InitAsDefaultInstance() {
}

DssCltASyncApplyWanPortReply::DssCltASyncApplyWanPortReply(const DssCltASyncApplyWanPortReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltASyncApplyWanPortReply::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  meetinghandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bandwidth_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltASyncApplyWanPortReply::~DssCltASyncApplyWanPortReply() {
  SharedDtor();
}

void DssCltASyncApplyWanPortReply::SharedDtor() {
  if (meetinghandle_ != &::google::protobuf::internal::kEmptyString) {
    delete meetinghandle_;
  }
  if (this != default_instance_) {
  }
}

void DssCltASyncApplyWanPortReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltASyncApplyWanPortReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltASyncApplyWanPortReply_descriptor_;
}

const DssCltASyncApplyWanPortReply& DssCltASyncApplyWanPortReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltASyncApplyWanPortReply* DssCltASyncApplyWanPortReply::default_instance_ = NULL;

DssCltASyncApplyWanPortReply* DssCltASyncApplyWanPortReply::New() const {
  return new DssCltASyncApplyWanPortReply;
}

void DssCltASyncApplyWanPortReply::Swap(DssCltASyncApplyWanPortReply* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltASyncApplyWanPortReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltASyncApplyWanPortReply_descriptor_;
  metadata.reflection = DssCltASyncApplyWanPortReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssReleasePortCmd::kClientIdFieldNumber;
const int CltDssReleasePortCmd::kAddressFieldNumber;
#endif  // !_MSC_VER

CltDssReleasePortCmd::CltDssReleasePortCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssReleasePortCmd::InitAsDefaultInstance() {
  address_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssReleasePortCmd::CltDssReleasePortCmd(const CltDssReleasePortCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssReleasePortCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  address_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssReleasePortCmd::~CltDssReleasePortCmd() {
  SharedDtor();
}

void CltDssReleasePortCmd::SharedDtor() {
  if (this != default_instance_) {
    delete address_;
  }
}

void CltDssReleasePortCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssReleasePortCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssReleasePortCmd_descriptor_;
}

const CltDssReleasePortCmd& CltDssReleasePortCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssReleasePortCmd* CltDssReleasePortCmd::default_instance_ = NULL;

CltDssReleasePortCmd* CltDssReleasePortCmd::New() const {
  return new CltDssReleasePortCmd;
}

void CltDssReleasePortCmd::Swap(CltDssReleasePortCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssReleasePortCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssReleasePortCmd_descriptor_;
  metadata.reflection = CltDssReleasePortCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAddBridgeReq::kClientIdFieldNumber;
const int CltDssAddBridgeReq::kRcvAddrFieldNumber;
const int CltDssAddBridgeReq::kStartServerHandleFieldNumber;
const int CltDssAddBridgeReq::kForceipFieldNumber;
#endif  // !_MSC_VER

CltDssAddBridgeReq::CltDssAddBridgeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAddBridgeReq::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssAddBridgeReq::CltDssAddBridgeReq(const CltDssAddBridgeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAddBridgeReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  startserverhandle_ = 0u;
  forceip_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAddBridgeReq::~CltDssAddBridgeReq() {
  SharedDtor();
}

void CltDssAddBridgeReq::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void CltDssAddBridgeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAddBridgeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAddBridgeReq_descriptor_;
}

const CltDssAddBridgeReq& CltDssAddBridgeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAddBridgeReq* CltDssAddBridgeReq::default_instance_ = NULL;

CltDssAddBridgeReq* CltDssAddBridgeReq::New() const {
  return new CltDssAddBridgeReq;
}

void CltDssAddBridgeReq::Swap(CltDssAddBridgeReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAddBridgeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAddBridgeReq_descriptor_;
  metadata.reflection = CltDssAddBridgeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddBridgeAck::kClientIdFieldNumber;
const int DssCltAddBridgeAck::kRcvAddrFieldNumber;
const int DssCltAddBridgeAck::kStartServerHandleFieldNumber;
const int DssCltAddBridgeAck::kBridgeHandleFieldNumber;
#endif  // !_MSC_VER

DssCltAddBridgeAck::DssCltAddBridgeAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddBridgeAck::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddBridgeAck::DssCltAddBridgeAck(const DssCltAddBridgeAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddBridgeAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  startserverhandle_ = 0u;
  bridgehandle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddBridgeAck::~DssCltAddBridgeAck() {
  SharedDtor();
}

void DssCltAddBridgeAck::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void DssCltAddBridgeAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddBridgeAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddBridgeAck_descriptor_;
}

const DssCltAddBridgeAck& DssCltAddBridgeAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddBridgeAck* DssCltAddBridgeAck::default_instance_ = NULL;

DssCltAddBridgeAck* DssCltAddBridgeAck::New() const {
  return new DssCltAddBridgeAck;
}

void DssCltAddBridgeAck::Swap(DssCltAddBridgeAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddBridgeAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddBridgeAck_descriptor_;
  metadata.reflection = DssCltAddBridgeAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddBridgeNack::kClientIdFieldNumber;
const int DssCltAddBridgeNack::kRcvAddrFieldNumber;
const int DssCltAddBridgeNack::kStartServerHandleFieldNumber;
#endif  // !_MSC_VER

DssCltAddBridgeNack::DssCltAddBridgeNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddBridgeNack::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddBridgeNack::DssCltAddBridgeNack(const DssCltAddBridgeNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddBridgeNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  startserverhandle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddBridgeNack::~DssCltAddBridgeNack() {
  SharedDtor();
}

void DssCltAddBridgeNack::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void DssCltAddBridgeNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddBridgeNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddBridgeNack_descriptor_;
}

const DssCltAddBridgeNack& DssCltAddBridgeNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddBridgeNack* DssCltAddBridgeNack::default_instance_ = NULL;

DssCltAddBridgeNack* DssCltAddBridgeNack::New() const {
  return new DssCltAddBridgeNack;
}

void DssCltAddBridgeNack::Swap(DssCltAddBridgeNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddBridgeNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddBridgeNack_descriptor_;
  metadata.reflection = DssCltAddBridgeNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssRemoveBridgeCmd::kClientIdFieldNumber;
const int CltDssRemoveBridgeCmd::kBridgeHandleFieldNumber;
#endif  // !_MSC_VER

CltDssRemoveBridgeCmd::CltDssRemoveBridgeCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssRemoveBridgeCmd::InitAsDefaultInstance() {
}

CltDssRemoveBridgeCmd::CltDssRemoveBridgeCmd(const CltDssRemoveBridgeCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssRemoveBridgeCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssRemoveBridgeCmd::~CltDssRemoveBridgeCmd() {
  SharedDtor();
}

void CltDssRemoveBridgeCmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CltDssRemoveBridgeCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssRemoveBridgeCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssRemoveBridgeCmd_descriptor_;
}

const CltDssRemoveBridgeCmd& CltDssRemoveBridgeCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssRemoveBridgeCmd* CltDssRemoveBridgeCmd::default_instance_ = NULL;

CltDssRemoveBridgeCmd* CltDssRemoveBridgeCmd::New() const {
  return new CltDssRemoveBridgeCmd;
}

void CltDssRemoveBridgeCmd::Swap(CltDssRemoveBridgeCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssRemoveBridgeCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssRemoveBridgeCmd_descriptor_;
  metadata.reflection = CltDssRemoveBridgeCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssSendToBridgeReq::kClientIdFieldNumber;
const int CltDssSendToBridgeReq::kBridgeHandleFieldNumber;
const int CltDssSendToBridgeReq::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

CltDssSendToBridgeReq::CltDssSendToBridgeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssSendToBridgeReq::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssSendToBridgeReq::CltDssSendToBridgeReq(const CltDssSendToBridgeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssSendToBridgeReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssSendToBridgeReq::~CltDssSendToBridgeReq() {
  SharedDtor();
}

void CltDssSendToBridgeReq::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void CltDssSendToBridgeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssSendToBridgeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssSendToBridgeReq_descriptor_;
}

const CltDssSendToBridgeReq& CltDssSendToBridgeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssSendToBridgeReq* CltDssSendToBridgeReq::default_instance_ = NULL;

CltDssSendToBridgeReq* CltDssSendToBridgeReq::New() const {
  return new CltDssSendToBridgeReq;
}

void CltDssSendToBridgeReq::Swap(CltDssSendToBridgeReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssSendToBridgeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssSendToBridgeReq_descriptor_;
  metadata.reflection = CltDssSendToBridgeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSendToBridgeAck::kClientIdFieldNumber;
const int DssCltSendToBridgeAck::kBridgeHandleFieldNumber;
const int DssCltSendToBridgeAck::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

DssCltSendToBridgeAck::DssCltSendToBridgeAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSendToBridgeAck::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltSendToBridgeAck::DssCltSendToBridgeAck(const DssCltSendToBridgeAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSendToBridgeAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSendToBridgeAck::~DssCltSendToBridgeAck() {
  SharedDtor();
}

void DssCltSendToBridgeAck::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void DssCltSendToBridgeAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSendToBridgeAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSendToBridgeAck_descriptor_;
}

const DssCltSendToBridgeAck& DssCltSendToBridgeAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSendToBridgeAck* DssCltSendToBridgeAck::default_instance_ = NULL;

DssCltSendToBridgeAck* DssCltSendToBridgeAck::New() const {
  return new DssCltSendToBridgeAck;
}

void DssCltSendToBridgeAck::Swap(DssCltSendToBridgeAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSendToBridgeAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSendToBridgeAck_descriptor_;
  metadata.reflection = DssCltSendToBridgeAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSendToBridgeNack::kClientIdFieldNumber;
const int DssCltSendToBridgeNack::kBridgeHandleFieldNumber;
const int DssCltSendToBridgeNack::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

DssCltSendToBridgeNack::DssCltSendToBridgeNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSendToBridgeNack::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltSendToBridgeNack::DssCltSendToBridgeNack(const DssCltSendToBridgeNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSendToBridgeNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSendToBridgeNack::~DssCltSendToBridgeNack() {
  SharedDtor();
}

void DssCltSendToBridgeNack::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void DssCltSendToBridgeNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSendToBridgeNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSendToBridgeNack_descriptor_;
}

const DssCltSendToBridgeNack& DssCltSendToBridgeNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSendToBridgeNack* DssCltSendToBridgeNack::default_instance_ = NULL;

DssCltSendToBridgeNack* DssCltSendToBridgeNack::New() const {
  return new DssCltSendToBridgeNack;
}

void DssCltSendToBridgeNack::Swap(DssCltSendToBridgeNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSendToBridgeNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSendToBridgeNack_descriptor_;
  metadata.reflection = DssCltSendToBridgeNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssStopSendToBridgeCmd::kClientIdFieldNumber;
const int CltDssStopSendToBridgeCmd::kBridgeHandleFieldNumber;
const int CltDssStopSendToBridgeCmd::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

CltDssStopSendToBridgeCmd::CltDssStopSendToBridgeCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssStopSendToBridgeCmd::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssStopSendToBridgeCmd::CltDssStopSendToBridgeCmd(const CltDssStopSendToBridgeCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssStopSendToBridgeCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssStopSendToBridgeCmd::~CltDssStopSendToBridgeCmd() {
  SharedDtor();
}

void CltDssStopSendToBridgeCmd::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void CltDssStopSendToBridgeCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssStopSendToBridgeCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssStopSendToBridgeCmd_descriptor_;
}

const CltDssStopSendToBridgeCmd& CltDssStopSendToBridgeCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssStopSendToBridgeCmd* CltDssStopSendToBridgeCmd::default_instance_ = NULL;

CltDssStopSendToBridgeCmd* CltDssStopSendToBridgeCmd::New() const {
  return new CltDssStopSendToBridgeCmd;
}

void CltDssStopSendToBridgeCmd::Swap(CltDssStopSendToBridgeCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssStopSendToBridgeCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssStopSendToBridgeCmd_descriptor_;
  metadata.reflection = CltDssStopSendToBridgeCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssReceiveFromBridgeReq::kClientIdFieldNumber;
const int CltDssReceiveFromBridgeReq::kBridgeHandleFieldNumber;
const int CltDssReceiveFromBridgeReq::kDstEpIdFieldNumber;
const int CltDssReceiveFromBridgeReq::kDstAddrFieldNumber;
#endif  // !_MSC_VER

CltDssReceiveFromBridgeReq::CltDssReceiveFromBridgeReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssReceiveFromBridgeReq::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssReceiveFromBridgeReq::CltDssReceiveFromBridgeReq(const CltDssReceiveFromBridgeReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssReceiveFromBridgeReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssReceiveFromBridgeReq::~CltDssReceiveFromBridgeReq() {
  SharedDtor();
}

void CltDssReceiveFromBridgeReq::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
  }
}

void CltDssReceiveFromBridgeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssReceiveFromBridgeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssReceiveFromBridgeReq_descriptor_;
}

const CltDssReceiveFromBridgeReq& CltDssReceiveFromBridgeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssReceiveFromBridgeReq* CltDssReceiveFromBridgeReq::default_instance_ = NULL;

CltDssReceiveFromBridgeReq* CltDssReceiveFromBridgeReq::New() const {
  return new CltDssReceiveFromBridgeReq;
}

void CltDssReceiveFromBridgeReq::Swap(CltDssReceiveFromBridgeReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssReceiveFromBridgeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssReceiveFromBridgeReq_descriptor_;
  metadata.reflection = CltDssReceiveFromBridgeReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltReceiveFromBridgeAck::kClientIdFieldNumber;
const int DssCltReceiveFromBridgeAck::kBridgeHandleFieldNumber;
const int DssCltReceiveFromBridgeAck::kDstEpIdFieldNumber;
const int DssCltReceiveFromBridgeAck::kDstAddrFieldNumber;
#endif  // !_MSC_VER

DssCltReceiveFromBridgeAck::DssCltReceiveFromBridgeAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltReceiveFromBridgeAck::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltReceiveFromBridgeAck::DssCltReceiveFromBridgeAck(const DssCltReceiveFromBridgeAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltReceiveFromBridgeAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltReceiveFromBridgeAck::~DssCltReceiveFromBridgeAck() {
  SharedDtor();
}

void DssCltReceiveFromBridgeAck::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
  }
}

void DssCltReceiveFromBridgeAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltReceiveFromBridgeAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltReceiveFromBridgeAck_descriptor_;
}

const DssCltReceiveFromBridgeAck& DssCltReceiveFromBridgeAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltReceiveFromBridgeAck* DssCltReceiveFromBridgeAck::default_instance_ = NULL;

DssCltReceiveFromBridgeAck* DssCltReceiveFromBridgeAck::New() const {
  return new DssCltReceiveFromBridgeAck;
}

void DssCltReceiveFromBridgeAck::Swap(DssCltReceiveFromBridgeAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltReceiveFromBridgeAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltReceiveFromBridgeAck_descriptor_;
  metadata.reflection = DssCltReceiveFromBridgeAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltReceiveFromBridgeNack::kClientIdFieldNumber;
const int DssCltReceiveFromBridgeNack::kBridgeHandleFieldNumber;
const int DssCltReceiveFromBridgeNack::kDstEpIdFieldNumber;
const int DssCltReceiveFromBridgeNack::kDstAddrFieldNumber;
#endif  // !_MSC_VER

DssCltReceiveFromBridgeNack::DssCltReceiveFromBridgeNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltReceiveFromBridgeNack::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltReceiveFromBridgeNack::DssCltReceiveFromBridgeNack(const DssCltReceiveFromBridgeNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltReceiveFromBridgeNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltReceiveFromBridgeNack::~DssCltReceiveFromBridgeNack() {
  SharedDtor();
}

void DssCltReceiveFromBridgeNack::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
  }
}

void DssCltReceiveFromBridgeNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltReceiveFromBridgeNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltReceiveFromBridgeNack_descriptor_;
}

const DssCltReceiveFromBridgeNack& DssCltReceiveFromBridgeNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltReceiveFromBridgeNack* DssCltReceiveFromBridgeNack::default_instance_ = NULL;

DssCltReceiveFromBridgeNack* DssCltReceiveFromBridgeNack::New() const {
  return new DssCltReceiveFromBridgeNack;
}

void DssCltReceiveFromBridgeNack::Swap(DssCltReceiveFromBridgeNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltReceiveFromBridgeNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltReceiveFromBridgeNack_descriptor_;
  metadata.reflection = DssCltReceiveFromBridgeNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssStopReceiveFromBridgeCmd::kClientIdFieldNumber;
const int CltDssStopReceiveFromBridgeCmd::kBridgeHandleFieldNumber;
const int CltDssStopReceiveFromBridgeCmd::kMapAddrFieldNumber;
const int CltDssStopReceiveFromBridgeCmd::kDstEpIdFieldNumber;
const int CltDssStopReceiveFromBridgeCmd::kDstAddrFieldNumber;
#endif  // !_MSC_VER

CltDssStopReceiveFromBridgeCmd::CltDssStopReceiveFromBridgeCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssStopReceiveFromBridgeCmd::InitAsDefaultInstance() {
  mapaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssStopReceiveFromBridgeCmd::CltDssStopReceiveFromBridgeCmd(const CltDssStopReceiveFromBridgeCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssStopReceiveFromBridgeCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  bridgehandle_ = 0u;
  mapaddr_ = NULL;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssStopReceiveFromBridgeCmd::~CltDssStopReceiveFromBridgeCmd() {
  SharedDtor();
}

void CltDssStopReceiveFromBridgeCmd::SharedDtor() {
  if (this != default_instance_) {
    delete mapaddr_;
    delete dstaddr_;
  }
}

void CltDssStopReceiveFromBridgeCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssStopReceiveFromBridgeCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssStopReceiveFromBridgeCmd_descriptor_;
}

const CltDssStopReceiveFromBridgeCmd& CltDssStopReceiveFromBridgeCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssStopReceiveFromBridgeCmd* CltDssStopReceiveFromBridgeCmd::default_instance_ = NULL;

CltDssStopReceiveFromBridgeCmd* CltDssStopReceiveFromBridgeCmd::New() const {
  return new CltDssStopReceiveFromBridgeCmd;
}

void CltDssStopReceiveFromBridgeCmd::Swap(CltDssStopReceiveFromBridgeCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssStopReceiveFromBridgeCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssStopReceiveFromBridgeCmd_descriptor_;
  metadata.reflection = CltDssStopReceiveFromBridgeCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAddSwitchReq::kClientIdFieldNumber;
const int CltDssAddSwitchReq::kDstEpIdFieldNumber;
const int CltDssAddSwitchReq::kDstAddrFieldNumber;
const int CltDssAddSwitchReq::kRcvAddrFieldNumber;
const int CltDssAddSwitchReq::kMapAddrFieldNumber;
const int CltDssAddSwitchReq::kDecKeyFieldNumber;
const int CltDssAddSwitchReq::kEncKeyFieldNumber;
const int CltDssAddSwitchReq::kUniformFieldNumber;
const int CltDssAddSwitchReq::kDstypeFieldNumber;
#endif  // !_MSC_VER

CltDssAddSwitchReq::CltDssAddSwitchReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAddSwitchReq::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  mapaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  deckey_ = const_cast< ::Dss::Event::SecretKey*>(&::Dss::Event::SecretKey::default_instance());
  enckey_ = const_cast< ::Dss::Event::SecretKey*>(&::Dss::Event::SecretKey::default_instance());
}

CltDssAddSwitchReq::CltDssAddSwitchReq(const CltDssAddSwitchReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAddSwitchReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  mapaddr_ = NULL;
  deckey_ = NULL;
  enckey_ = NULL;
  uniform_ = false;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAddSwitchReq::~CltDssAddSwitchReq() {
  SharedDtor();
}

void CltDssAddSwitchReq::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
    delete rcvaddr_;
    delete mapaddr_;
    delete deckey_;
    delete enckey_;
  }
}

void CltDssAddSwitchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAddSwitchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAddSwitchReq_descriptor_;
}

const CltDssAddSwitchReq& CltDssAddSwitchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAddSwitchReq* CltDssAddSwitchReq::default_instance_ = NULL;

CltDssAddSwitchReq* CltDssAddSwitchReq::New() const {
  return new CltDssAddSwitchReq;
}

void CltDssAddSwitchReq::Swap(CltDssAddSwitchReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAddSwitchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAddSwitchReq_descriptor_;
  metadata.reflection = CltDssAddSwitchReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddSwitchAck::kClientIdFieldNumber;
const int DssCltAddSwitchAck::kDstEpIdFieldNumber;
const int DssCltAddSwitchAck::kDstAddrFieldNumber;
const int DssCltAddSwitchAck::kRcvAddrFieldNumber;
const int DssCltAddSwitchAck::kDstypeFieldNumber;
#endif  // !_MSC_VER

DssCltAddSwitchAck::DssCltAddSwitchAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddSwitchAck::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddSwitchAck::DssCltAddSwitchAck(const DssCltAddSwitchAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddSwitchAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddSwitchAck::~DssCltAddSwitchAck() {
  SharedDtor();
}

void DssCltAddSwitchAck::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
    delete rcvaddr_;
  }
}

void DssCltAddSwitchAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddSwitchAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddSwitchAck_descriptor_;
}

const DssCltAddSwitchAck& DssCltAddSwitchAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddSwitchAck* DssCltAddSwitchAck::default_instance_ = NULL;

DssCltAddSwitchAck* DssCltAddSwitchAck::New() const {
  return new DssCltAddSwitchAck;
}

void DssCltAddSwitchAck::Swap(DssCltAddSwitchAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddSwitchAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddSwitchAck_descriptor_;
  metadata.reflection = DssCltAddSwitchAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddSwitchNack::kClientIdFieldNumber;
const int DssCltAddSwitchNack::kDstEpIdFieldNumber;
const int DssCltAddSwitchNack::kDstAddrFieldNumber;
const int DssCltAddSwitchNack::kRcvAddrFieldNumber;
const int DssCltAddSwitchNack::kDstypeFieldNumber;
#endif  // !_MSC_VER

DssCltAddSwitchNack::DssCltAddSwitchNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddSwitchNack::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddSwitchNack::DssCltAddSwitchNack(const DssCltAddSwitchNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddSwitchNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddSwitchNack::~DssCltAddSwitchNack() {
  SharedDtor();
}

void DssCltAddSwitchNack::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
    delete rcvaddr_;
  }
}

void DssCltAddSwitchNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddSwitchNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddSwitchNack_descriptor_;
}

const DssCltAddSwitchNack& DssCltAddSwitchNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddSwitchNack* DssCltAddSwitchNack::default_instance_ = NULL;

DssCltAddSwitchNack* DssCltAddSwitchNack::New() const {
  return new DssCltAddSwitchNack;
}

void DssCltAddSwitchNack::Swap(DssCltAddSwitchNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddSwitchNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddSwitchNack_descriptor_;
  metadata.reflection = DssCltAddSwitchNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAddM2OneSwitchReq::kClientIdFieldNumber;
const int CltDssAddM2OneSwitchReq::kDstEpIdFieldNumber;
const int CltDssAddM2OneSwitchReq::kDstAddrFieldNumber;
const int CltDssAddM2OneSwitchReq::kRcvAddrFieldNumber;
const int CltDssAddM2OneSwitchReq::kMapAddrFieldNumber;
const int CltDssAddM2OneSwitchReq::kDecKeyFieldNumber;
const int CltDssAddM2OneSwitchReq::kEncKeyFieldNumber;
const int CltDssAddM2OneSwitchReq::kUniformFieldNumber;
const int CltDssAddM2OneSwitchReq::kDstypeFieldNumber;
#endif  // !_MSC_VER

CltDssAddM2OneSwitchReq::CltDssAddM2OneSwitchReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAddM2OneSwitchReq::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  mapaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  deckey_ = const_cast< ::Dss::Event::SecretKey*>(&::Dss::Event::SecretKey::default_instance());
  enckey_ = const_cast< ::Dss::Event::SecretKey*>(&::Dss::Event::SecretKey::default_instance());
}

CltDssAddM2OneSwitchReq::CltDssAddM2OneSwitchReq(const CltDssAddM2OneSwitchReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAddM2OneSwitchReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  mapaddr_ = NULL;
  deckey_ = NULL;
  enckey_ = NULL;
  uniform_ = false;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAddM2OneSwitchReq::~CltDssAddM2OneSwitchReq() {
  SharedDtor();
}

void CltDssAddM2OneSwitchReq::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
    delete rcvaddr_;
    delete mapaddr_;
    delete deckey_;
    delete enckey_;
  }
}

void CltDssAddM2OneSwitchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAddM2OneSwitchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAddM2OneSwitchReq_descriptor_;
}

const CltDssAddM2OneSwitchReq& CltDssAddM2OneSwitchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAddM2OneSwitchReq* CltDssAddM2OneSwitchReq::default_instance_ = NULL;

CltDssAddM2OneSwitchReq* CltDssAddM2OneSwitchReq::New() const {
  return new CltDssAddM2OneSwitchReq;
}

void CltDssAddM2OneSwitchReq::Swap(CltDssAddM2OneSwitchReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAddM2OneSwitchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAddM2OneSwitchReq_descriptor_;
  metadata.reflection = CltDssAddM2OneSwitchReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddM2OneSwitchAck::kClientIdFieldNumber;
const int DssCltAddM2OneSwitchAck::kDstEpIdFieldNumber;
const int DssCltAddM2OneSwitchAck::kDstAddrFieldNumber;
const int DssCltAddM2OneSwitchAck::kRcvAddrFieldNumber;
const int DssCltAddM2OneSwitchAck::kDstypeFieldNumber;
#endif  // !_MSC_VER

DssCltAddM2OneSwitchAck::DssCltAddM2OneSwitchAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddM2OneSwitchAck::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddM2OneSwitchAck::DssCltAddM2OneSwitchAck(const DssCltAddM2OneSwitchAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddM2OneSwitchAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddM2OneSwitchAck::~DssCltAddM2OneSwitchAck() {
  SharedDtor();
}

void DssCltAddM2OneSwitchAck::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
    delete rcvaddr_;
  }
}

void DssCltAddM2OneSwitchAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddM2OneSwitchAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddM2OneSwitchAck_descriptor_;
}

const DssCltAddM2OneSwitchAck& DssCltAddM2OneSwitchAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddM2OneSwitchAck* DssCltAddM2OneSwitchAck::default_instance_ = NULL;

DssCltAddM2OneSwitchAck* DssCltAddM2OneSwitchAck::New() const {
  return new DssCltAddM2OneSwitchAck;
}

void DssCltAddM2OneSwitchAck::Swap(DssCltAddM2OneSwitchAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddM2OneSwitchAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddM2OneSwitchAck_descriptor_;
  metadata.reflection = DssCltAddM2OneSwitchAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddM2OneSwitchNack::kClientIdFieldNumber;
const int DssCltAddM2OneSwitchNack::kDstEpIdFieldNumber;
const int DssCltAddM2OneSwitchNack::kDstAddrFieldNumber;
const int DssCltAddM2OneSwitchNack::kRcvAddrFieldNumber;
const int DssCltAddM2OneSwitchNack::kDstypeFieldNumber;
#endif  // !_MSC_VER

DssCltAddM2OneSwitchNack::DssCltAddM2OneSwitchNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddM2OneSwitchNack::InitAsDefaultInstance() {
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddM2OneSwitchNack::DssCltAddM2OneSwitchNack(const DssCltAddM2OneSwitchNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddM2OneSwitchNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddM2OneSwitchNack::~DssCltAddM2OneSwitchNack() {
  SharedDtor();
}

void DssCltAddM2OneSwitchNack::SharedDtor() {
  if (this != default_instance_) {
    delete dstaddr_;
    delete rcvaddr_;
  }
}

void DssCltAddM2OneSwitchNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddM2OneSwitchNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddM2OneSwitchNack_descriptor_;
}

const DssCltAddM2OneSwitchNack& DssCltAddM2OneSwitchNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddM2OneSwitchNack* DssCltAddM2OneSwitchNack::default_instance_ = NULL;

DssCltAddM2OneSwitchNack* DssCltAddM2OneSwitchNack::New() const {
  return new DssCltAddM2OneSwitchNack;
}

void DssCltAddM2OneSwitchNack::Swap(DssCltAddM2OneSwitchNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddM2OneSwitchNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddM2OneSwitchNack_descriptor_;
  metadata.reflection = DssCltAddM2OneSwitchNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAddSrcSwitchReq::kClientIdFieldNumber;
const int CltDssAddSrcSwitchReq::kSrcEpIdFieldNumber;
const int CltDssAddSrcSwitchReq::kSrcAddrFieldNumber;
const int CltDssAddSrcSwitchReq::kDstEpIdFieldNumber;
const int CltDssAddSrcSwitchReq::kDstAddrFieldNumber;
const int CltDssAddSrcSwitchReq::kRcvAddrFieldNumber;
const int CltDssAddSrcSwitchReq::kMapAddrFieldNumber;
const int CltDssAddSrcSwitchReq::kDecKeyFieldNumber;
const int CltDssAddSrcSwitchReq::kEncKeyFieldNumber;
const int CltDssAddSrcSwitchReq::kUniformFieldNumber;
const int CltDssAddSrcSwitchReq::kDstypeFieldNumber;
#endif  // !_MSC_VER

CltDssAddSrcSwitchReq::CltDssAddSrcSwitchReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAddSrcSwitchReq::InitAsDefaultInstance() {
  srcaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  mapaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  deckey_ = const_cast< ::Dss::Event::SecretKey*>(&::Dss::Event::SecretKey::default_instance());
  enckey_ = const_cast< ::Dss::Event::SecretKey*>(&::Dss::Event::SecretKey::default_instance());
}

CltDssAddSrcSwitchReq::CltDssAddSrcSwitchReq(const CltDssAddSrcSwitchReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAddSrcSwitchReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srcepid_ = GOOGLE_ULONGLONG(0);
  srcaddr_ = NULL;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  mapaddr_ = NULL;
  deckey_ = NULL;
  enckey_ = NULL;
  uniform_ = false;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAddSrcSwitchReq::~CltDssAddSrcSwitchReq() {
  SharedDtor();
}

void CltDssAddSrcSwitchReq::SharedDtor() {
  if (this != default_instance_) {
    delete srcaddr_;
    delete dstaddr_;
    delete rcvaddr_;
    delete mapaddr_;
    delete deckey_;
    delete enckey_;
  }
}

void CltDssAddSrcSwitchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAddSrcSwitchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAddSrcSwitchReq_descriptor_;
}

const CltDssAddSrcSwitchReq& CltDssAddSrcSwitchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAddSrcSwitchReq* CltDssAddSrcSwitchReq::default_instance_ = NULL;

CltDssAddSrcSwitchReq* CltDssAddSrcSwitchReq::New() const {
  return new CltDssAddSrcSwitchReq;
}

void CltDssAddSrcSwitchReq::Swap(CltDssAddSrcSwitchReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAddSrcSwitchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAddSrcSwitchReq_descriptor_;
  metadata.reflection = CltDssAddSrcSwitchReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddSrcSwitchAck::kClientIdFieldNumber;
const int DssCltAddSrcSwitchAck::kSrcEpIdFieldNumber;
const int DssCltAddSrcSwitchAck::kSrcAddrFieldNumber;
const int DssCltAddSrcSwitchAck::kDstEpIdFieldNumber;
const int DssCltAddSrcSwitchAck::kDstAddrFieldNumber;
const int DssCltAddSrcSwitchAck::kRcvAddrFieldNumber;
const int DssCltAddSrcSwitchAck::kDstypeFieldNumber;
#endif  // !_MSC_VER

DssCltAddSrcSwitchAck::DssCltAddSrcSwitchAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddSrcSwitchAck::InitAsDefaultInstance() {
  srcaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddSrcSwitchAck::DssCltAddSrcSwitchAck(const DssCltAddSrcSwitchAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddSrcSwitchAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srcepid_ = GOOGLE_ULONGLONG(0);
  srcaddr_ = NULL;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddSrcSwitchAck::~DssCltAddSrcSwitchAck() {
  SharedDtor();
}

void DssCltAddSrcSwitchAck::SharedDtor() {
  if (this != default_instance_) {
    delete srcaddr_;
    delete dstaddr_;
    delete rcvaddr_;
  }
}

void DssCltAddSrcSwitchAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddSrcSwitchAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddSrcSwitchAck_descriptor_;
}

const DssCltAddSrcSwitchAck& DssCltAddSrcSwitchAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddSrcSwitchAck* DssCltAddSrcSwitchAck::default_instance_ = NULL;

DssCltAddSrcSwitchAck* DssCltAddSrcSwitchAck::New() const {
  return new DssCltAddSrcSwitchAck;
}

void DssCltAddSrcSwitchAck::Swap(DssCltAddSrcSwitchAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddSrcSwitchAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddSrcSwitchAck_descriptor_;
  metadata.reflection = DssCltAddSrcSwitchAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddSrcSwitchNack::kClientIdFieldNumber;
const int DssCltAddSrcSwitchNack::kSrcEpIdFieldNumber;
const int DssCltAddSrcSwitchNack::kSrcAddrFieldNumber;
const int DssCltAddSrcSwitchNack::kDstEpIdFieldNumber;
const int DssCltAddSrcSwitchNack::kDstAddrFieldNumber;
const int DssCltAddSrcSwitchNack::kRcvAddrFieldNumber;
const int DssCltAddSrcSwitchNack::kDstypeFieldNumber;
#endif  // !_MSC_VER

DssCltAddSrcSwitchNack::DssCltAddSrcSwitchNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddSrcSwitchNack::InitAsDefaultInstance() {
  srcaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddSrcSwitchNack::DssCltAddSrcSwitchNack(const DssCltAddSrcSwitchNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddSrcSwitchNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srcepid_ = GOOGLE_ULONGLONG(0);
  srcaddr_ = NULL;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddSrcSwitchNack::~DssCltAddSrcSwitchNack() {
  SharedDtor();
}

void DssCltAddSrcSwitchNack::SharedDtor() {
  if (this != default_instance_) {
    delete srcaddr_;
    delete dstaddr_;
    delete rcvaddr_;
  }
}

void DssCltAddSrcSwitchNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddSrcSwitchNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddSrcSwitchNack_descriptor_;
}

const DssCltAddSrcSwitchNack& DssCltAddSrcSwitchNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddSrcSwitchNack* DssCltAddSrcSwitchNack::default_instance_ = NULL;

DssCltAddSrcSwitchNack* DssCltAddSrcSwitchNack::New() const {
  return new DssCltAddSrcSwitchNack;
}

void DssCltAddSrcSwitchNack::Swap(DssCltAddSrcSwitchNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddSrcSwitchNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddSrcSwitchNack_descriptor_;
  metadata.reflection = DssCltAddSrcSwitchNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssRemoveSwitchCmd::kClientIdFieldNumber;
const int CltDssRemoveSwitchCmd::kSrcEpIdFieldNumber;
const int CltDssRemoveSwitchCmd::kSrcAddrFieldNumber;
const int CltDssRemoveSwitchCmd::kDstEpIdFieldNumber;
const int CltDssRemoveSwitchCmd::kDstAddrFieldNumber;
const int CltDssRemoveSwitchCmd::kRcvAddrFieldNumber;
const int CltDssRemoveSwitchCmd::kMapAddrFieldNumber;
const int CltDssRemoveSwitchCmd::kDstypeFieldNumber;
#endif  // !_MSC_VER

CltDssRemoveSwitchCmd::CltDssRemoveSwitchCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssRemoveSwitchCmd::InitAsDefaultInstance() {
  srcaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  dstaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
  mapaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssRemoveSwitchCmd::CltDssRemoveSwitchCmd(const CltDssRemoveSwitchCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssRemoveSwitchCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srcepid_ = GOOGLE_ULONGLONG(0);
  srcaddr_ = NULL;
  dstepid_ = GOOGLE_ULONGLONG(0);
  dstaddr_ = NULL;
  rcvaddr_ = NULL;
  mapaddr_ = NULL;
  dstype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssRemoveSwitchCmd::~CltDssRemoveSwitchCmd() {
  SharedDtor();
}

void CltDssRemoveSwitchCmd::SharedDtor() {
  if (this != default_instance_) {
    delete srcaddr_;
    delete dstaddr_;
    delete rcvaddr_;
    delete mapaddr_;
  }
}

void CltDssRemoveSwitchCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssRemoveSwitchCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssRemoveSwitchCmd_descriptor_;
}

const CltDssRemoveSwitchCmd& CltDssRemoveSwitchCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssRemoveSwitchCmd* CltDssRemoveSwitchCmd::default_instance_ = NULL;

CltDssRemoveSwitchCmd* CltDssRemoveSwitchCmd::New() const {
  return new CltDssRemoveSwitchCmd;
}

void CltDssRemoveSwitchCmd::Swap(CltDssRemoveSwitchCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssRemoveSwitchCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssRemoveSwitchCmd_descriptor_;
  metadata.reflection = CltDssRemoveSwitchCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAddDumpReq::kClientIdFieldNumber;
const int CltDssAddDumpReq::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

CltDssAddDumpReq::CltDssAddDumpReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAddDumpReq::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssAddDumpReq::CltDssAddDumpReq(const CltDssAddDumpReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAddDumpReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAddDumpReq::~CltDssAddDumpReq() {
  SharedDtor();
}

void CltDssAddDumpReq::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void CltDssAddDumpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAddDumpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAddDumpReq_descriptor_;
}

const CltDssAddDumpReq& CltDssAddDumpReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAddDumpReq* CltDssAddDumpReq::default_instance_ = NULL;

CltDssAddDumpReq* CltDssAddDumpReq::New() const {
  return new CltDssAddDumpReq;
}

void CltDssAddDumpReq::Swap(CltDssAddDumpReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAddDumpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAddDumpReq_descriptor_;
  metadata.reflection = CltDssAddDumpReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddDumpAck::kClientIdFieldNumber;
const int DssCltAddDumpAck::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

DssCltAddDumpAck::DssCltAddDumpAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddDumpAck::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddDumpAck::DssCltAddDumpAck(const DssCltAddDumpAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddDumpAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddDumpAck::~DssCltAddDumpAck() {
  SharedDtor();
}

void DssCltAddDumpAck::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void DssCltAddDumpAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddDumpAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddDumpAck_descriptor_;
}

const DssCltAddDumpAck& DssCltAddDumpAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddDumpAck* DssCltAddDumpAck::default_instance_ = NULL;

DssCltAddDumpAck* DssCltAddDumpAck::New() const {
  return new DssCltAddDumpAck;
}

void DssCltAddDumpAck::Swap(DssCltAddDumpAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddDumpAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddDumpAck_descriptor_;
  metadata.reflection = DssCltAddDumpAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAddDumpNack::kClientIdFieldNumber;
const int DssCltAddDumpNack::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

DssCltAddDumpNack::DssCltAddDumpNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAddDumpNack::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAddDumpNack::DssCltAddDumpNack(const DssCltAddDumpNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAddDumpNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAddDumpNack::~DssCltAddDumpNack() {
  SharedDtor();
}

void DssCltAddDumpNack::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void DssCltAddDumpNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAddDumpNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAddDumpNack_descriptor_;
}

const DssCltAddDumpNack& DssCltAddDumpNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAddDumpNack* DssCltAddDumpNack::default_instance_ = NULL;

DssCltAddDumpNack* DssCltAddDumpNack::New() const {
  return new DssCltAddDumpNack;
}

void DssCltAddDumpNack::Swap(DssCltAddDumpNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAddDumpNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAddDumpNack_descriptor_;
  metadata.reflection = DssCltAddDumpNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssRemoveDumpCmd::kClientIdFieldNumber;
const int CltDssRemoveDumpCmd::kRcvAddrFieldNumber;
#endif  // !_MSC_VER

CltDssRemoveDumpCmd::CltDssRemoveDumpCmd()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssRemoveDumpCmd::InitAsDefaultInstance() {
  rcvaddr_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssRemoveDumpCmd::CltDssRemoveDumpCmd(const CltDssRemoveDumpCmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssRemoveDumpCmd::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  rcvaddr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssRemoveDumpCmd::~CltDssRemoveDumpCmd() {
  SharedDtor();
}

void CltDssRemoveDumpCmd::SharedDtor() {
  if (this != default_instance_) {
    delete rcvaddr_;
  }
}

void CltDssRemoveDumpCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssRemoveDumpCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssRemoveDumpCmd_descriptor_;
}

const CltDssRemoveDumpCmd& CltDssRemoveDumpCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssRemoveDumpCmd* CltDssRemoveDumpCmd::default_instance_ = NULL;

CltDssRemoveDumpCmd* CltDssRemoveDumpCmd::New() const {
  return new CltDssRemoveDumpCmd;
}

void CltDssRemoveDumpCmd::Swap(CltDssRemoveDumpCmd* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssRemoveDumpCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssRemoveDumpCmd_descriptor_;
  metadata.reflection = CltDssRemoveDumpCmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSrvLostNtf::kClientIdFieldNumber;
const int DssCltSrvLostNtf::kSrvHandleFieldNumber;
#endif  // !_MSC_VER

DssCltSrvLostNtf::DssCltSrvLostNtf()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSrvLostNtf::InitAsDefaultInstance() {
}

DssCltSrvLostNtf::DssCltSrvLostNtf(const DssCltSrvLostNtf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSrvLostNtf::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSrvLostNtf::~DssCltSrvLostNtf() {
  SharedDtor();
}

void DssCltSrvLostNtf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DssCltSrvLostNtf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSrvLostNtf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSrvLostNtf_descriptor_;
}

const DssCltSrvLostNtf& DssCltSrvLostNtf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSrvLostNtf* DssCltSrvLostNtf::default_instance_ = NULL;

DssCltSrvLostNtf* DssCltSrvLostNtf::New() const {
  return new DssCltSrvLostNtf;
}

void DssCltSrvLostNtf::Swap(DssCltSrvLostNtf* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSrvLostNtf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSrvLostNtf_descriptor_;
  metadata.reflection = DssCltSrvLostNtf_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltSrvRegisterNtf::kClientIdFieldNumber;
const int DssCltSrvRegisterNtf::kSrvHandleFieldNumber;
#endif  // !_MSC_VER

DssCltSrvRegisterNtf::DssCltSrvRegisterNtf()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltSrvRegisterNtf::InitAsDefaultInstance() {
}

DssCltSrvRegisterNtf::DssCltSrvRegisterNtf(const DssCltSrvRegisterNtf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltSrvRegisterNtf::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltSrvRegisterNtf::~DssCltSrvRegisterNtf() {
  SharedDtor();
}

void DssCltSrvRegisterNtf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DssCltSrvRegisterNtf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltSrvRegisterNtf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltSrvRegisterNtf_descriptor_;
}

const DssCltSrvRegisterNtf& DssCltSrvRegisterNtf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltSrvRegisterNtf* DssCltSrvRegisterNtf::default_instance_ = NULL;

DssCltSrvRegisterNtf* DssCltSrvRegisterNtf::New() const {
  return new DssCltSrvRegisterNtf;
}

void DssCltSrvRegisterNtf::Swap(DssCltSrvRegisterNtf* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltSrvRegisterNtf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltSrvRegisterNtf_descriptor_;
  metadata.reflection = DssCltSrvRegisterNtf_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAliveDetectReq::kReservedFieldNumber;
#endif  // !_MSC_VER

CltDssAliveDetectReq::CltDssAliveDetectReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAliveDetectReq::InitAsDefaultInstance() {
}

CltDssAliveDetectReq::CltDssAliveDetectReq(const CltDssAliveDetectReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAliveDetectReq::SharedCtor() {
  _cached_size_ = 0;
  reserved_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAliveDetectReq::~CltDssAliveDetectReq() {
  SharedDtor();
}

void CltDssAliveDetectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CltDssAliveDetectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAliveDetectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAliveDetectReq_descriptor_;
}

const CltDssAliveDetectReq& CltDssAliveDetectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAliveDetectReq* CltDssAliveDetectReq::default_instance_ = NULL;

CltDssAliveDetectReq* CltDssAliveDetectReq::New() const {
  return new CltDssAliveDetectReq;
}

void CltDssAliveDetectReq::Swap(CltDssAliveDetectReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAliveDetectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAliveDetectReq_descriptor_;
  metadata.reflection = CltDssAliveDetectReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAliveDetectRsp::kReservedFieldNumber;
#endif  // !_MSC_VER

DssCltAliveDetectRsp::DssCltAliveDetectRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAliveDetectRsp::InitAsDefaultInstance() {
}

DssCltAliveDetectRsp::DssCltAliveDetectRsp(const DssCltAliveDetectRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAliveDetectRsp::SharedCtor() {
  _cached_size_ = 0;
  reserved_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAliveDetectRsp::~DssCltAliveDetectRsp() {
  SharedDtor();
}

void DssCltAliveDetectRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DssCltAliveDetectRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAliveDetectRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAliveDetectRsp_descriptor_;
}

const DssCltAliveDetectRsp& DssCltAliveDetectRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAliveDetectRsp* DssCltAliveDetectRsp::default_instance_ = NULL;

DssCltAliveDetectRsp* DssCltAliveDetectRsp::New() const {
  return new DssCltAliveDetectRsp;
}

void DssCltAliveDetectRsp::Swap(DssCltAliveDetectRsp* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAliveDetectRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAliveDetectRsp_descriptor_;
  metadata.reflection = DssCltAliveDetectRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAttachLanIpOfPortReq::kClientIdFieldNumber;
const int CltDssAttachLanIpOfPortReq::kSrvHandleFieldNumber;
const int CltDssAttachLanIpOfPortReq::kPortFieldNumber;
const int CltDssAttachLanIpOfPortReq::kSubnetFieldNumber;
#endif  // !_MSC_VER

CltDssAttachLanIpOfPortReq::CltDssAttachLanIpOfPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAttachLanIpOfPortReq::InitAsDefaultInstance() {
  subnet_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

CltDssAttachLanIpOfPortReq::CltDssAttachLanIpOfPortReq(const CltDssAttachLanIpOfPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAttachLanIpOfPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  port_ = 0u;
  subnet_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAttachLanIpOfPortReq::~CltDssAttachLanIpOfPortReq() {
  SharedDtor();
}

void CltDssAttachLanIpOfPortReq::SharedDtor() {
  if (this != default_instance_) {
    delete subnet_;
  }
}

void CltDssAttachLanIpOfPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAttachLanIpOfPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAttachLanIpOfPortReq_descriptor_;
}

const CltDssAttachLanIpOfPortReq& CltDssAttachLanIpOfPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAttachLanIpOfPortReq* CltDssAttachLanIpOfPortReq::default_instance_ = NULL;

CltDssAttachLanIpOfPortReq* CltDssAttachLanIpOfPortReq::New() const {
  return new CltDssAttachLanIpOfPortReq;
}

void CltDssAttachLanIpOfPortReq::Swap(CltDssAttachLanIpOfPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAttachLanIpOfPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAttachLanIpOfPortReq_descriptor_;
  metadata.reflection = CltDssAttachLanIpOfPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAttachLanIpOfPortAck::kClientIdFieldNumber;
const int DssCltAttachLanIpOfPortAck::kSrvHandleFieldNumber;
const int DssCltAttachLanIpOfPortAck::kPortFieldNumber;
const int DssCltAttachLanIpOfPortAck::kIpAddrFieldNumber;
#endif  // !_MSC_VER

DssCltAttachLanIpOfPortAck::DssCltAttachLanIpOfPortAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAttachLanIpOfPortAck::InitAsDefaultInstance() {
}

DssCltAttachLanIpOfPortAck::DssCltAttachLanIpOfPortAck(const DssCltAttachLanIpOfPortAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAttachLanIpOfPortAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  port_ = 0u;
  ipaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAttachLanIpOfPortAck::~DssCltAttachLanIpOfPortAck() {
  SharedDtor();
}

void DssCltAttachLanIpOfPortAck::SharedDtor() {
  if (ipaddr_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddr_;
  }
  if (this != default_instance_) {
  }
}

void DssCltAttachLanIpOfPortAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAttachLanIpOfPortAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAttachLanIpOfPortAck_descriptor_;
}

const DssCltAttachLanIpOfPortAck& DssCltAttachLanIpOfPortAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAttachLanIpOfPortAck* DssCltAttachLanIpOfPortAck::default_instance_ = NULL;

DssCltAttachLanIpOfPortAck* DssCltAttachLanIpOfPortAck::New() const {
  return new DssCltAttachLanIpOfPortAck;
}

void DssCltAttachLanIpOfPortAck::Swap(DssCltAttachLanIpOfPortAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAttachLanIpOfPortAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAttachLanIpOfPortAck_descriptor_;
  metadata.reflection = DssCltAttachLanIpOfPortAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAttachLanIpOfPortNack::kClientIdFieldNumber;
const int DssCltAttachLanIpOfPortNack::kSrvHandleFieldNumber;
const int DssCltAttachLanIpOfPortNack::kPortFieldNumber;
const int DssCltAttachLanIpOfPortNack::kSubnetFieldNumber;
#endif  // !_MSC_VER

DssCltAttachLanIpOfPortNack::DssCltAttachLanIpOfPortNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAttachLanIpOfPortNack::InitAsDefaultInstance() {
  subnet_ = const_cast< ::Dss::Event::DssNetAddr*>(&::Dss::Event::DssNetAddr::default_instance());
}

DssCltAttachLanIpOfPortNack::DssCltAttachLanIpOfPortNack(const DssCltAttachLanIpOfPortNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAttachLanIpOfPortNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  port_ = 0u;
  subnet_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAttachLanIpOfPortNack::~DssCltAttachLanIpOfPortNack() {
  SharedDtor();
}

void DssCltAttachLanIpOfPortNack::SharedDtor() {
  if (this != default_instance_) {
    delete subnet_;
  }
}

void DssCltAttachLanIpOfPortNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAttachLanIpOfPortNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAttachLanIpOfPortNack_descriptor_;
}

const DssCltAttachLanIpOfPortNack& DssCltAttachLanIpOfPortNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAttachLanIpOfPortNack* DssCltAttachLanIpOfPortNack::default_instance_ = NULL;

DssCltAttachLanIpOfPortNack* DssCltAttachLanIpOfPortNack::New() const {
  return new DssCltAttachLanIpOfPortNack;
}

void DssCltAttachLanIpOfPortNack::Swap(DssCltAttachLanIpOfPortNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAttachLanIpOfPortNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAttachLanIpOfPortNack_descriptor_;
  metadata.reflection = DssCltAttachLanIpOfPortNack_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CltDssAttachWanIpOfPortReq::kClientIdFieldNumber;
const int CltDssAttachWanIpOfPortReq::kSrvHandleFieldNumber;
const int CltDssAttachWanIpOfPortReq::kPortFieldNumber;
const int CltDssAttachWanIpOfPortReq::kCarriertypeFieldNumber;
#endif  // !_MSC_VER

CltDssAttachWanIpOfPortReq::CltDssAttachWanIpOfPortReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CltDssAttachWanIpOfPortReq::InitAsDefaultInstance() {
}

CltDssAttachWanIpOfPortReq::CltDssAttachWanIpOfPortReq(const CltDssAttachWanIpOfPortReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CltDssAttachWanIpOfPortReq::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  port_ = 0u;
  carriertype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CltDssAttachWanIpOfPortReq::~CltDssAttachWanIpOfPortReq() {
  SharedDtor();
}

void CltDssAttachWanIpOfPortReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CltDssAttachWanIpOfPortReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CltDssAttachWanIpOfPortReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CltDssAttachWanIpOfPortReq_descriptor_;
}

const CltDssAttachWanIpOfPortReq& CltDssAttachWanIpOfPortReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

CltDssAttachWanIpOfPortReq* CltDssAttachWanIpOfPortReq::default_instance_ = NULL;

CltDssAttachWanIpOfPortReq* CltDssAttachWanIpOfPortReq::New() const {
  return new CltDssAttachWanIpOfPortReq;
}

void CltDssAttachWanIpOfPortReq::Swap(CltDssAttachWanIpOfPortReq* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata CltDssAttachWanIpOfPortReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CltDssAttachWanIpOfPortReq_descriptor_;
  metadata.reflection = CltDssAttachWanIpOfPortReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAttachWanIpOfPortAck::kClientIdFieldNumber;
const int DssCltAttachWanIpOfPortAck::kSrvHandleFieldNumber;
const int DssCltAttachWanIpOfPortAck::kPortFieldNumber;
const int DssCltAttachWanIpOfPortAck::kIpAddrFieldNumber;
#endif  // !_MSC_VER

DssCltAttachWanIpOfPortAck::DssCltAttachWanIpOfPortAck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAttachWanIpOfPortAck::InitAsDefaultInstance() {
}

DssCltAttachWanIpOfPortAck::DssCltAttachWanIpOfPortAck(const DssCltAttachWanIpOfPortAck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAttachWanIpOfPortAck::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  port_ = 0u;
  ipaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAttachWanIpOfPortAck::~DssCltAttachWanIpOfPortAck() {
  SharedDtor();
}

void DssCltAttachWanIpOfPortAck::SharedDtor() {
  if (ipaddr_ != &::google::protobuf::internal::kEmptyString) {
    delete ipaddr_;
  }
  if (this != default_instance_) {
  }
}

void DssCltAttachWanIpOfPortAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAttachWanIpOfPortAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAttachWanIpOfPortAck_descriptor_;
}

const DssCltAttachWanIpOfPortAck& DssCltAttachWanIpOfPortAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAttachWanIpOfPortAck* DssCltAttachWanIpOfPortAck::default_instance_ = NULL;

DssCltAttachWanIpOfPortAck* DssCltAttachWanIpOfPortAck::New() const {
  return new DssCltAttachWanIpOfPortAck;
}

void DssCltAttachWanIpOfPortAck::Swap(DssCltAttachWanIpOfPortAck* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAttachWanIpOfPortAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAttachWanIpOfPortAck_descriptor_;
  metadata.reflection = DssCltAttachWanIpOfPortAck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DssCltAttachWanIpOfPortNack::kClientIdFieldNumber;
const int DssCltAttachWanIpOfPortNack::kSrvHandleFieldNumber;
const int DssCltAttachWanIpOfPortNack::kPortFieldNumber;
const int DssCltAttachWanIpOfPortNack::kCarriertypeFieldNumber;
#endif  // !_MSC_VER

DssCltAttachWanIpOfPortNack::DssCltAttachWanIpOfPortNack()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DssCltAttachWanIpOfPortNack::InitAsDefaultInstance() {
}

DssCltAttachWanIpOfPortNack::DssCltAttachWanIpOfPortNack(const DssCltAttachWanIpOfPortNack& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DssCltAttachWanIpOfPortNack::SharedCtor() {
  _cached_size_ = 0;
  clientid_ = 0u;
  srvhandle_ = 0u;
  port_ = 0u;
  carriertype_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DssCltAttachWanIpOfPortNack::~DssCltAttachWanIpOfPortNack() {
  SharedDtor();
}

void DssCltAttachWanIpOfPortNack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DssCltAttachWanIpOfPortNack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DssCltAttachWanIpOfPortNack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DssCltAttachWanIpOfPortNack_descriptor_;
}

const DssCltAttachWanIpOfPortNack& DssCltAttachWanIpOfPortNack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dssevent_2eproto();
  return *default_instance_;
}

DssCltAttachWanIpOfPortNack* DssCltAttachWanIpOfPortNack::default_instance_ = NULL;

DssCltAttachWanIpOfPortNack* DssCltAttachWanIpOfPortNack::New() const {
  return new DssCltAttachWanIpOfPortNack;
}

void DssCltAttachWanIpOfPortNack::Swap(DssCltAttachWanIpOfPortNack* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata DssCltAttachWanIpOfPortNack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DssCltAttachWanIpOfPortNack_descriptor_;
  metadata.reflection = DssCltAttachWanIpOfPortNack_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Event
}  // namespace Dss

// @@protoc_insertion_point(global_scope)
